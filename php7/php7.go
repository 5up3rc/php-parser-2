//line php7/php7.y:2
package php7

import __yyfmt__ "fmt"

//line php7/php7.y:2
import (
	"strconv"
	"strings"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign"
	"github.com/z7zmey/php-parser/node/expr/binary"
	"github.com/z7zmey/php-parser/node/expr/cast"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"
)

//line php7/php7.y:21
type yySymType struct {
	yys               int
	node              node.Node
	token             token.Token
	boolWithToken     boolWithToken
	list              []node.Node
	foreachVariable   foreachVariable
	nodesWithEndToken *nodesWithEndToken
	str               string
	altSyntaxNode     altSyntaxNode
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php7/php7.y:2630

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	57, 421,
	78, 421,
	119, 421,
	125, 421,
	-2, 416,
	-1, 47,
	123, 424,
	-2, 433,
	-1, 83,
	57, 423,
	78, 423,
	119, 423,
	123, 426,
	125, 423,
	-2, 411,
	-1, 106,
	78, 384,
	-2, 413,
	-1, 228,
	57, 421,
	78, 421,
	119, 421,
	125, 421,
	-2, 312,
	-1, 231,
	123, 426,
	-2, 423,
	-1, 234,
	57, 421,
	78, 421,
	119, 421,
	125, 421,
	-2, 314,
	-1, 352,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 336,
	-1, 353,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 337,
	-1, 354,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 338,
	-1, 355,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 339,
	-1, 356,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 340,
	-1, 357,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 341,
	-1, 358,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 342,
	-1, 359,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 343,
	-1, 360,
	115, 0,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 344,
	-1, 367,
	124, 162,
	135, 162,
	-2, 421,
	-1, 411,
	124, 461,
	126, 461,
	135, 461,
	-2, 421,
	-1, 415,
	57, 422,
	78, 422,
	119, 422,
	123, 425,
	125, 422,
	-2, 346,
	-1, 429,
	123, 447,
	-2, 414,
	-1, 430,
	123, 449,
	-2, 439,
	-1, 509,
	123, 447,
	-2, 415,
	-1, 510,
	123, 449,
	-2, 440,
	-1, 569,
	124, 212,
	-2, 217,
	-1, 594,
	123, 425,
	-2, 422,
	-1, 646,
	124, 212,
	-2, 217,
	-1, 651,
	124, 182,
	-2, 421,
	-1, 659,
	124, 212,
	-2, 217,
	-1, 684,
	124, 460,
	126, 460,
	135, 460,
	-2, 421,
	-1, 718,
	124, 183,
	-2, 421,
	-1, 738,
	12, 264,
	-2, 267,
	-1, 777,
	124, 182,
	-2, 421,
	-1, 779,
	124, 185,
	-2, 395,
	-1, 881,
	29, 76,
	-2, 80,
	-1, 913,
	124, 212,
	-2, 217,
}

const yyPrivate = 57344

const yyLast = 7303

var yyAct = [...]int{

	27, 129, 824, 837, 660, 860, 374, 576, 740, 434,
	873, 106, 836, 792, 664, 773, 810, 673, 784, 563,
	662, 137, 137, 137, 311, 650, 150, 4, 710, 699,
	631, 630, 530, 520, 185, 665, 320, 315, 366, 376,
	8, 512, 131, 220, 79, 314, 403, 313, 7, 222,
	6, 188, 224, 227, 146, 149, 235, 236, 237, 238,
	239, 571, 142, 240, 241, 242, 243, 244, 245, 246,
	125, 249, 124, 127, 257, 258, 259, 253, 2, 511,
	312, 428, 164, 5, 126, 136, 853, 869, 272, 273,
	263, 275, 276, 841, 81, 840, 268, 863, 229, 229,
	891, 867, 682, 834, 588, 178, 566, 139, 140, 675,
	831, 892, 675, 539, 333, 868, 329, 307, 404, 332,
	104, 308, 104, 758, 832, 327, 110, 301, 334, 306,
	330, 317, 300, 703, 727, 322, 323, 114, 120, 328,
	624, 83, 619, 307, 564, 104, 301, 554, 284, 286,
	189, 409, 729, 335, 336, 337, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 265,
	362, 364, 164, 368, 319, 598, 370, 601, 599, 779,
	268, 861, 305, 691, 294, 231, 231, 331, 687, 78,
	378, 386, 388, 389, 390, 391, 392, 393, 394, 395,
	396, 397, 398, 399, 516, 608, 400, 137, 402, 604,
	224, 382, 178, 143, 605, 854, 229, 405, 595, 282,
	583, 413, 408, 925, 224, 517, 260, 887, 289, 43,
	291, 178, 105, 422, 105, 298, 819, 818, 304, 137,
	808, 178, 800, 783, 772, 726, 423, 843, 716, 696,
	694, 137, 686, 407, 648, 429, 509, 105, 369, 361,
	229, 521, 522, 265, 636, 523, 515, 414, 626, 596,
	162, 161, 514, 527, 269, 913, 531, 587, 224, 290,
	162, 161, 218, 228, 234, 827, 163, 165, 166, 164,
	116, 229, 401, 781, 600, 283, 719, 862, 685, 549,
	659, 421, 167, 168, 160, 163, 165, 166, 164, 4,
	812, 811, 825, 231, 160, 163, 165, 166, 164, 418,
	419, 533, 8, 559, 416, 150, 646, 285, 558, 569,
	7, 552, 6, 550, 508, 644, 427, 518, 645, 750,
	667, 668, 412, 383, 217, 418, 381, 419, 419, 418,
	216, 287, 274, 271, 562, 270, 116, 231, 104, 133,
	305, 248, 111, 219, 542, 5, 215, 183, 269, 182,
	568, 548, 578, 181, 579, 557, 575, 580, 581, 573,
	560, 556, 577, 135, 134, 130, 112, 929, 231, 928,
	288, 385, 187, 767, 768, 919, 586, 902, 267, 901,
	224, 590, 178, 224, 886, 570, 849, 666, 406, 820,
	814, 367, 807, 116, 764, 104, 541, 607, 544, 767,
	768, 751, 610, 715, 713, 133, 180, 177, 111, 292,
	711, 709, 706, 534, 553, 585, 538, 535, 384, 179,
	158, 162, 161, 372, 232, 254, 593, 326, 325, 589,
	420, 430, 510, 324, 295, 411, 213, 214, 116, 806,
	609, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	105, 813, 133, 803, 801, 111, 425, 178, 200, 201,
	202, 203, 205, 206, 207, 208, 209, 210, 211, 212,
	204, 232, 760, 534, 534, 137, 614, 766, 606, 255,
	256, 534, 908, 885, 858, 856, 119, 802, 143, 789,
	782, 732, 417, 625, 674, 574, 162, 161, 536, 618,
	113, 184, 788, 252, 197, 199, 198, 105, 303, 623,
	611, 190, 701, 640, 322, 642, 635, 116, 617, 116,
	526, 116, 647, 615, 173, 174, 175, 176, 167, 168,
	160, 163, 165, 166, 164, 303, 638, 115, 671, 113,
	672, 669, 195, 196, 577, 303, 122, 123, 116, 683,
	641, 656, 744, 745, 746, 743, 742, 741, 76, 77,
	613, 288, 288, 649, 254, 905, 689, 679, 303, 229,
	229, 513, 116, 262, 305, 627, 632, 261, 717, 572,
	521, 377, 634, 628, 380, 531, 133, 303, 629, 111,
	545, 121, 670, 543, 903, 785, 229, 145, 547, 904,
	318, 707, 723, 724, 688, 297, 279, 280, 795, 794,
	702, 714, 4, 695, 893, 224, 793, 697, 669, 721,
	299, 540, 667, 668, 725, 8, 705, 524, 255, 256,
	544, 669, 544, 7, 712, 6, 45, 731, 669, 693,
	302, 133, 752, 753, 111, 828, 224, 748, 147, 254,
	147, 633, 747, 254, 420, 116, 602, 229, 720, 700,
	756, 749, 730, 118, 704, 632, 231, 231, 5, 128,
	322, 546, 534, 612, 191, 145, 406, 616, 254, 757,
	224, 254, 375, 420, 373, 762, 281, 194, 193, 754,
	293, 759, 254, 231, 761, 192, 186, 277, 116, 669,
	769, 774, 771, 776, 1, 796, 765, 797, 786, 577,
	790, 254, 799, 255, 256, 544, 251, 255, 256, 844,
	544, 544, 229, 778, 637, 122, 123, 116, 809, 104,
	37, 738, 700, 735, 632, 109, 736, 817, 379, 805,
	661, 525, 255, 256, 823, 255, 256, 826, 529, 221,
	519, 816, 859, 822, 231, 278, 255, 256, 365, 872,
	833, 815, 767, 768, 367, 651, 144, 829, 770, 767,
	768, 791, 848, 141, 321, 255, 256, 108, 148, 850,
	842, 835, 658, 821, 250, 839, 847, 643, 544, 804,
	544, 684, 927, 845, 852, 866, 133, 669, 223, 111,
	857, 42, 870, 774, 41, 879, 865, 838, 883, 884,
	15, 14, 597, 878, 266, 232, 48, 47, 889, 231,
	890, 107, 49, 82, 894, 80, 888, 71, 247, 61,
	897, 264, 60, 895, 877, 876, 879, 898, 875, 874,
	230, 896, 233, 900, 878, 544, 734, 907, 44, 663,
	722, 105, 718, 655, 309, 117, 296, 3, 911, 433,
	787, 728, 0, 0, 912, 0, 0, 0, 0, 918,
	921, 914, 0, 917, 916, 577, 0, 0, 922, 0,
	0, 923, 0, 0, 0, 669, 0, 0, 926, 0,
	0, 930, 87, 88, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 777, 19, 0,
	0, 0, 20, 21, 34, 36, 12, 22, 32, 0,
	0, 33, 11, 0, 23, 0, 28, 85, 86, 9,
	38, 39, 40, 0, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 10, 100, 96,
	111, 0, 89, 90, 91, 0, 0, 0, 0, 84,
	52, 0, 0, 0, 73, 74, 24, 76, 77, 0,
	0, 0, 53, 54, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 103, 72, 13, 698, 31,
	0, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 70, 105, 87, 88, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 12, 22, 32,
	0, 0, 33, 11, 0, 23, 0, 28, 85, 86,
	9, 38, 39, 40, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 10, 100,
	96, 111, 0, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 24, 76, 77,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 13, 537,
	31, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 36, 12, 22,
	32, 0, 0, 33, 11, 0, 23, 0, 28, 85,
	86, 9, 38, 39, 40, 0, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 10,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 24, 76,
	77, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 13,
	0, 31, 0, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 0, 73, 74, 24,
	76, 77, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 103, 72,
	13, 931, 31, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 87, 88, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 36,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 316, 38, 39, 40, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 89, 90, 91, 0,
	0, 0, 0, 84, 52, 0, 0, 0, 73, 74,
	24, 76, 77, 0, 0, 0, 53, 54, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 103,
	72, 13, 924, 31, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 70, 105, 87, 88, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 0, 50, 108, 0, 101, 97, 98, 99, 94,
	95, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 133, 100, 96, 111, 0, 89, 90, 91,
	0, 0, 0, 0, 84, 52, 0, 0, 0, 73,
	74, 24, 76, 77, 0, 0, 0, 53, 54, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	103, 72, 13, 920, 31, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 70, 105, 87, 88,
	69, 46, 92, 93, 35, 0, 104, 0, 26, 0,
	0, 0, 109, 25, 17, 16, 0, 18, 0, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 36, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 85, 86, 316, 38, 39, 40, 0,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 89, 90,
	91, 0, 0, 0, 0, 84, 52, 0, 0, 0,
	73, 74, 24, 76, 77, 0, 0, 0, 53, 54,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 103, 72, 13, 910, 31, 0, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 70, 105, 87,
	88, 69, 46, 92, 93, 35, 0, 104, 0, 26,
	0, 0, 0, 109, 25, 17, 16, 0, 18, 0,
	29, 0, 30, 0, 0, 19, 0, 0, 0, 20,
	21, 34, 36, 0, 22, 32, 0, 0, 33, 0,
	0, 23, 0, 28, 85, 86, 316, 38, 39, 40,
	0, 0, 0, 0, 50, 108, 0, 101, 97, 98,
	99, 94, 95, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 133, 100, 96, 111, 0, 89,
	90, 91, 0, 0, 0, 0, 84, 52, 0, 0,
	0, 73, 74, 24, 76, 77, 0, 0, 0, 53,
	54, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 103, 72, 13, 909, 31, 0, 59, 0,
	51, 0, 0, 0, 56, 55, 57, 58, 70, 105,
	87, 88, 69, 46, 92, 93, 35, 0, 104, 0,
	26, 0, 0, 0, 109, 25, 17, 16, 0, 18,
	906, 29, 0, 30, 0, 0, 19, 0, 0, 0,
	20, 21, 34, 36, 0, 22, 32, 0, 0, 33,
	0, 0, 23, 0, 28, 85, 86, 316, 38, 39,
	40, 0, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 0,
	89, 90, 91, 0, 0, 0, 0, 84, 52, 0,
	0, 0, 73, 74, 24, 76, 77, 0, 0, 0,
	53, 54, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 103, 72, 13, 0, 31, 0, 59,
	0, 51, 0, 0, 0, 56, 55, 57, 58, 70,
	105, 87, 88, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 0, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 0,
	0, 20, 21, 34, 36, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 316, 38,
	39, 40, 0, 0, 0, 0, 50, 108, 0, 101,
	97, 98, 99, 94, 95, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 133, 100, 96, 111,
	0, 89, 90, 91, 0, 0, 0, 0, 84, 52,
	0, 0, 0, 73, 74, 24, 76, 77, 0, 0,
	0, 53, 54, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 103, 72, 13, 855, 31, 0,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	70, 105, 87, 88, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 851, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 36, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 85, 86, 316,
	38, 39, 40, 0, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 89, 90, 91, 0, 0, 0, 0, 84,
	52, 0, 0, 0, 73, 74, 24, 76, 77, 0,
	0, 0, 53, 54, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 103, 72, 13, 0, 31,
	0, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 70, 105, 87, 88, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 780, 0, 19,
	0, 0, 0, 20, 21, 34, 36, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	316, 38, 39, 40, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 0, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 24, 76, 77,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 13, 0,
	31, 0, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 763, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 36, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 85,
	86, 316, 38, 39, 40, 0, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 24, 76,
	77, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 13,
	0, 31, 0, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 36, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 316, 38, 39, 40, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 678, 73, 74, 24,
	76, 77, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 103, 72,
	13, 0, 31, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 87, 88, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 36,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 316, 38, 39, 40, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 133, 100, 96, 111, 0, 89, 90, 91, 0,
	0, 0, 0, 84, 52, 0, 0, 0, 73, 74,
	24, 76, 77, 0, 0, 0, 53, 54, 75, 62,
	63, 64, 65, 66, 67, 68, 0, 0, 0, 103,
	72, 13, 567, 31, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 70, 105, 87, 88, 69,
	46, 92, 93, 35, 0, 104, 0, 26, 0, 0,
	0, 109, 25, 17, 16, 0, 18, 0, 29, 0,
	30, 0, 0, 19, 0, 0, 0, 20, 21, 34,
	36, 0, 22, 32, 0, 0, 33, 0, 0, 23,
	0, 28, 85, 86, 316, 38, 39, 40, 0, 0,
	0, 0, 50, 108, 0, 101, 97, 98, 99, 94,
	95, 0, 0, 0, 0, 0, 0, 102, 0, 0,
	0, 0, 133, 100, 96, 111, 0, 89, 90, 91,
	0, 0, 0, 0, 84, 52, 0, 0, 0, 73,
	74, 24, 76, 77, 0, 0, 0, 53, 54, 75,
	62, 63, 64, 65, 66, 67, 68, 0, 0, 0,
	103, 72, 13, 310, 31, 0, 59, 0, 51, 0,
	0, 0, 56, 55, 57, 58, 70, 105, 87, 88,
	69, 46, 92, 93, 35, 0, 104, 0, 26, 0,
	0, 0, 109, 25, 17, 16, 0, 18, 0, 29,
	0, 30, 0, 0, 19, 0, 0, 0, 20, 21,
	34, 36, 0, 22, 32, 0, 0, 33, 0, 0,
	23, 0, 28, 85, 86, 316, 38, 39, 40, 0,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 0, 89, 90,
	91, 0, 0, 0, 0, 84, 52, 0, 0, 0,
	73, 74, 24, 76, 77, 0, 0, 0, 53, 54,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 103, 72, 13, 0, 31, 0, 59, 0, 51,
	0, 0, 0, 56, 55, 57, 58, 70, 105, 441,
	442, 452, 453, 0, 0, 432, 0, 104, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 487, 488, 489, 490, 491,
	479, 480, 481, 482, 483, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 499, 497, 498,
	494, 495, 0, 0, 486, 492, 493, 500, 501, 503,
	502, 504, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 507, 506, 0, 0, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 454, 455,
	456, 484, 485, 435, 436, 437, 438, 439, 440, 0,
	0, 87, 88, 69, 46, 92, 93, 35, 0, 104,
	0, 26, 0, 0, 431, 109, 25, 17, 16, 0,
	18, 0, 29, 0, 30, 0, 0, 19, 0, 105,
	0, 20, 21, 34, 132, 0, 22, 32, 0, 0,
	33, 0, 0, 23, 0, 28, 85, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 108, 0, 101,
	97, 98, 99, 94, 95, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 133, 100, 96, 111,
	0, 89, 90, 91, 0, 0, 0, 0, 84, 52,
	0, 0, 0, 73, 74, 24, 0, 0, 0, 0,
	0, 53, 54, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 103, 72, 13, 0, 31, 775,
	59, 0, 51, 0, 0, 0, 56, 55, 57, 58,
	70, 105, 87, 88, 69, 46, 92, 93, 35, 0,
	104, 0, 26, 0, 0, 0, 109, 25, 17, 16,
	0, 18, 0, 29, 0, 30, 0, 0, 19, 0,
	0, 0, 20, 21, 34, 132, 0, 22, 32, 0,
	0, 33, 0, 0, 23, 0, 28, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 89, 90, 91, 0, 0, 0, 0, 84,
	52, 0, 0, 0, 73, 74, 24, 0, 0, 0,
	0, 0, 53, 54, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 103, 72, 13, 0, 31,
	846, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 70, 105, 87, 88, 69, 46, 92, 93, 35,
	0, 104, 0, 26, 0, 0, 0, 109, 25, 17,
	16, 0, 18, 0, 29, 0, 30, 0, 0, 19,
	0, 0, 0, 20, 21, 34, 132, 0, 22, 32,
	0, 0, 33, 0, 0, 23, 0, 28, 85, 86,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 0, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 24, 0, 0,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 13, 0,
	31, 680, 59, 0, 51, 0, 0, 0, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 46, 92, 93,
	35, 0, 104, 0, 26, 0, 0, 0, 109, 25,
	17, 16, 0, 18, 0, 29, 0, 30, 0, 0,
	19, 0, 0, 0, 20, 21, 34, 132, 0, 22,
	32, 0, 0, 33, 0, 0, 23, 0, 28, 85,
	86, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 24, 0,
	0, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 13,
	0, 31, 657, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 46, 92,
	93, 35, 0, 104, 0, 26, 0, 0, 0, 109,
	25, 17, 16, 0, 18, 0, 29, 0, 30, 0,
	0, 19, 0, 0, 0, 20, 21, 34, 132, 0,
	22, 32, 0, 0, 33, 0, 0, 23, 0, 28,
	85, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	133, 100, 96, 111, 0, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 0, 73, 74, 24,
	0, 0, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 0, 0, 0, 103, 72,
	13, 0, 31, 639, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 87, 88, 69, 46,
	92, 93, 35, 0, 104, 0, 26, 0, 0, 0,
	109, 25, 17, 16, 0, 18, 0, 29, 0, 30,
	0, 0, 19, 0, 0, 0, 20, 21, 34, 132,
	0, 22, 32, 0, 0, 33, 0, 0, 23, 0,
	28, 85, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 108, 0, 101, 97, 98, 99, 94, 95,
	0, 0, 0, 0, 0, 0, 102, 0, 178, 0,
	0, 133, 100, 96, 111, 0, 89, 90, 91, 0,
	0, 0, 0, 84, 52, 0, 0, 0, 73, 74,
	24, 0, 0, 177, 0, 0, 53, 54, 75, 62,
	63, 64, 65, 66, 67, 68, 158, 162, 161, 103,
	72, 13, 0, 31, 0, 59, 0, 51, 0, 0,
	0, 56, 55, 57, 58, 70, 105, 154, 156, 155,
	178, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 177, 737, 0, 0, 739,
	0, 812, 811, 0, 0, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	744, 745, 746, 743, 742, 741, 0, 0, 0, 0,
	755, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 708, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 0, 0,
	0, 0, 692, 0, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 0, 0, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 156, 155,
	178, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 180, 177, 737, 0, 0, 739,
	681, 0, 0, 0, 0, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	744, 745, 746, 743, 742, 741, 0, 0, 677, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 864, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 737, 0,
	0, 739, 622, 0, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 744, 745, 746, 743, 742, 741, 0, 0,
	621, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 830, 0, 0, 154, 156, 155,
	178, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 180, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	737, 0, 0, 739, 603, 0, 0, 0, 0, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 744, 745, 746, 743, 742, 741,
	0, 0, 594, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 798, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 737, 0,
	0, 739, 584, 0, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 744, 745, 746, 743, 742, 741, 0, 0,
	582, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 733, 0, 0, 154, 156, 155,
	178, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 180, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	0, 0, 0, 0, 0, 0, 561, 0, 0, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 410, 0, 0, 0, 0, 0, 0, 0,
	415, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 156, 155, 178, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 0, 0, 0, 0, 180, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 156, 155, 178, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 180, 177, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	156, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 156, 155, 178, 0, 0, 0,
	0, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	180, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 158, 162, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 157, 159, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 441, 442, 452, 453, 0, 0,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	487, 488, 489, 490, 491, 479, 480, 481, 482, 483,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 499, 497, 498, 494, 495, 0, 0, 486,
	492, 493, 500, 501, 503, 502, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 880,
	507, 506, 111, 0, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 454, 455, 456, 484, 485, 435, 436,
	437, 438, 439, 440, 0, 0, 441, 442, 452, 453,
	0, 0, 881, 0, 0, 0, 0, 0, 0, 0,
	899, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 487, 488, 489, 490, 491, 479, 480, 481,
	482, 483, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 499, 497, 498, 494, 495, 0,
	0, 486, 492, 493, 500, 501, 503, 502, 504, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 880, 507, 506, 111, 0, 443, 444, 445, 446,
	447, 448, 449, 450, 451, 454, 455, 456, 484, 485,
	435, 436, 437, 438, 439, 440, 156, 155, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 158, 162, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 178, 0, 0, 0, 0, 152, 153, 157,
	159, 171, 172, 169, 170, 173, 174, 175, 176, 167,
	168, 160, 163, 165, 166, 164, 180, 177, 426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	158, 162, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 152, 153, 157, 159, 171, 172, 169, 170, 173,
	174, 175, 176, 167, 168, 160, 163, 165, 166, 164,
	0, 0, 0, 0, 180, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 152,
	153, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 180, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 162, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 152, 153, 157, 159, 171, 172, 169,
	170, 173, 174, 175, 176, 167, 168, 160, 163, 165,
	166, 164, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 162, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 153, 157, 159,
	171, 172, 169, 170, 173, 174, 175, 176, 167, 168,
	160, 163, 165, 166, 164, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 162,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 157, 159, 171, 172, 169, 170, 173, 174, 175,
	176, 167, 168, 160, 163, 165, 166, 164, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 162, 161, 0, 0, 0, 0, 87, 88,
	69, 0, 92, 93, 116, 0, 104, 0, 0, 0,
	0, 0, 109, 0, 0, 159, 171, 172, 169, 170,
	173, 174, 175, 176, 167, 168, 160, 163, 165, 166,
	164, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 108, 0, 101, 97, 98, 99,
	94, 95, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 133, 100, 96, 111, 532, 89, 90,
	91, 0, 0, 0, 0, 84, 52, 0, 0, 0,
	73, 74, 138, 0, 0, 0, 0, 0, 53, 54,
	75, 62, 63, 64, 65, 66, 67, 68, 0, 0,
	0, 103, 72, 0, 0, 0, 0, 59, 528, 51,
	0, 0, 0, 56, 55, 57, 58, 70, 105, 87,
	88, 69, 0, 92, 93, 116, 0, 104, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 108, 0, 101, 97, 98,
	99, 94, 95, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 0, 133, 100, 96, 111, 0, 89,
	90, 91, 0, 0, 0, 0, 84, 52, 0, 0,
	0, 73, 74, 138, 0, 0, 0, 0, 0, 53,
	54, 75, 62, 63, 64, 65, 66, 67, 68, 0,
	0, 0, 103, 72, 0, 0, 0, 0, 59, 0,
	51, 0, 0, 225, 56, 55, 57, 58, 70, 105,
	87, 88, 69, 0, 92, 93, 116, 0, 104, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 108, 0, 101, 97,
	98, 99, 94, 95, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 133, 100, 96, 111, 532,
	89, 90, 91, 0, 0, 0, 0, 84, 52, 0,
	0, 0, 73, 74, 138, 0, 0, 0, 0, 0,
	53, 54, 75, 62, 63, 64, 65, 66, 67, 68,
	0, 0, 0, 103, 72, 0, 0, 0, 0, 59,
	0, 51, 0, 0, 0, 56, 55, 57, 58, 70,
	105, 87, 88, 69, 0, 92, 93, 116, 0, 104,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 108, 0, 101,
	97, 98, 99, 94, 95, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 133, 100, 96, 111,
	0, 89, 90, 91, 0, 0, 0, 0, 84, 52,
	0, 0, 0, 73, 74, 138, 0, 0, 0, 0,
	0, 53, 54, 75, 62, 63, 64, 65, 66, 67,
	68, 0, 0, 0, 103, 72, 0, 0, 0, 0,
	59, 0, 51, 0, 0, 591, 56, 55, 57, 58,
	70, 105, 87, 88, 69, 0, 92, 93, 116, 424,
	104, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 108, 0,
	101, 97, 98, 99, 94, 95, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 133, 100, 96,
	111, 0, 89, 90, 91, 0, 0, 0, 0, 84,
	52, 0, 0, 0, 73, 74, 138, 0, 0, 0,
	0, 0, 53, 54, 75, 62, 63, 64, 65, 66,
	67, 68, 0, 0, 0, 103, 72, 0, 0, 0,
	0, 59, 0, 51, 0, 0, 0, 56, 55, 57,
	58, 70, 105, 87, 88, 69, 0, 92, 93, 116,
	0, 104, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 86,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 108,
	0, 101, 97, 98, 99, 94, 95, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 133, 100,
	96, 111, 0, 89, 90, 91, 0, 0, 0, 0,
	84, 52, 0, 0, 0, 73, 74, 138, 0, 0,
	0, 0, 0, 53, 54, 75, 62, 63, 64, 65,
	66, 67, 68, 0, 0, 0, 103, 72, 0, 0,
	0, 0, 59, 0, 51, 0, 0, 387, 56, 55,
	57, 58, 70, 105, 87, 88, 69, 0, 92, 93,
	116, 0, 104, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	86, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	108, 0, 101, 97, 98, 99, 94, 95, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 133,
	100, 96, 111, 0, 89, 90, 91, 0, 0, 0,
	0, 84, 52, 0, 0, 0, 73, 74, 138, 0,
	0, 0, 0, 0, 53, 54, 75, 62, 63, 64,
	65, 66, 67, 68, 0, 0, 0, 103, 72, 0,
	0, 0, 363, 59, 0, 51, 0, 0, 0, 56,
	55, 57, 58, 70, 105, 87, 88, 69, 0, 92,
	93, 116, 0, 104, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 108, 0, 101, 97, 98, 99, 94, 95, 0,
	0, 0, 0, 0, 0, 102, 178, 0, 0, 0,
	133, 100, 96, 111, 0, 89, 90, 91, 0, 0,
	0, 0, 84, 52, 0, 0, 0, 73, 74, 138,
	0, 177, 0, 0, 0, 53, 54, 75, 62, 63,
	64, 65, 66, 67, 68, 162, 161, 0, 103, 72,
	0, 0, 0, 0, 59, 0, 51, 0, 0, 0,
	56, 55, 57, 58, 70, 105, 0, 0, 0, 171,
	172, 169, 170, 173, 174, 175, 176, 167, 168, 160,
	163, 165, 166, 164, 441, 442, 452, 453, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	487, 488, 489, 490, 491, 479, 480, 481, 482, 483,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 499, 497, 498, 494, 495, 0, 0, 486,
	492, 493, 500, 501, 503, 502, 504, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	507, 506, 0, 0, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 454, 455, 456, 484, 485, 435, 436,
	437, 438, 439, 440, 441, 442, 452, 453, 0, 0,
	915, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	487, 488, 489, 490, 491, 479, 480, 481, 482, 483,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 499, 497, 498, 494, 495, 0, 0, 486,
	492, 493, 500, 501, 503, 502, 504, 505, 116, 0,
	104, 0, 0, 0, 0, 0, 109, 0, 0, 496,
	507, 506, 0, 0, 443, 444, 445, 446, 447, 448,
	449, 450, 451, 454, 455, 456, 484, 485, 744, 745,
	746, 743, 742, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 653, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 654, 0, 0, 652, 0, 0, 0,
	0, 0, 105,
}
var yyPact = [...]int{

	-1000, -1000, 1190, -1000, -1000, -1000, -1000, -1000, -1000, 273,
	458, 549, 699, -1000, -1000, -1000, 272, 3912, 271, 270,
	6861, 6861, 6861, 133, 678, 6861, -1000, 5152, 260, 256,
	254, -1000, 422, 6861, 726, 280, 22, 499, 725, 718,
	717, 489, 451, 362, -1000, -1000, 253, -1000, -1000, 235,
	250, 6075, 6861, 757, 757, 6861, 6861, 6861, 6861, 6861,
	-1000, -1000, 6861, 6861, 6861, 6861, 6861, 6861, 6861, 248,
	6861, -1000, 739, 6861, 6861, 6861, -1000, -1000, -1000, 111,
	-1000, 539, 535, -1000, 356, 242, 240, 6861, 6861, 239,
	6861, 6861, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 720, 709, -1000, 110, 214, 214, 238, -1000,
	520, 685, 165, 685, 318, -1000, -1000, 343, 578, 11,
	598, 685, -1000, -1000, -1000, -1000, 8, -1000, -15, 2893,
	6861, 619, 22, 497, 6861, 6861, 342, 5206, 600, 337,
	336, 4, -1000, -1000, -5, 22, -1000, -17, -7, -1000,
	5206, -1000, 6861, 6861, 6861, 6861, 6861, 6861, 6861, 6861,
	6861, 6861, 6861, 6861, 6861, 6861, 6861, 6861, 6861, 6861,
	6861, 6861, 6861, 6861, 6861, 6861, 6861, 6861, 413, 6730,
	6861, 757, 6861, 699, -1000, 5098, 332, -1000, 714, -1000,
	712, -1000, 566, -1000, 569, 233, 3912, 230, 327, 279,
	6599, 6861, 6861, 6861, 6861, 6861, 6861, 6861, 6861, 6861,
	6861, 6861, 6861, -1000, -1000, 6861, 6861, 6861, 108, 6075,
	106, 16, -1000, -1000, 5044, 757, 229, -1000, -1000, 111,
	6861, -1000, -1000, 6075, -1000, -85, -85, 15, -85, 4986,
	-85, -85, -85, -85, -85, -85, -85, -1000, 6861, -85,
	414, 681, 677, -1000, 186, 6468, 757, 322, 5600, 322,
	6861, 3155, 3155, 214, -1000, 533, 157, 214, -1000, -1000,
	6861, 6861, 5206, 5206, 6861, 5206, 5206, 592, -1000, 706,
	443, 681, 6861, -1000, -1000, 5944, -1000, 6075, 702, 520,
	326, 520, -1000, 419, 1059, -1000, 325, -8, 579, 685,
	-1000, 551, 511, 701, 556, -1000, -1000, 699, 6861, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 220, 4932, 218, -1000,
	323, 12, 5206, 4878, -1000, -1000, -1000, -1000, 133, -1000,
	676, -1000, 6861, -1000, 6861, 5707, 5760, 5488, 322, 5542,
	5813, 6846, 3898, 132, 132, 132, 15, -85, 15, 15,
	161, 161, 407, 407, 407, 407, 151, 151, 151, 151,
	407, -1000, 4824, 6861, 5654, 9, -1000, -1000, 4770, -18,
	2762, -1000, -1000, -1000, 216, 566, 563, 547, 416, -1000,
	547, 6861, -1000, 6861, -1000, -1000, 322, 6861, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	4716, 104, 4662, 214, -1000, 6861, -1000, 163, -32, 6075,
	6337, -1000, 6075, 4608, 102, -1000, 155, -1000, -1000, -1000,
	-1000, 175, 686, 4554, 99, 398, 6861, 89, 214, -1000,
	-1000, 6861, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 214, -1000,
	-1000, -1000, -1000, 133, 6861, 6861, 108, 133, 566, 7,
	-1000, 5206, 4500, 4446, -1000, -1000, -1000, 4392, -1000, 5,
	-1000, 5206, 6861, 154, -1000, -1000, -1000, -1000, -1000, -1000,
	504, 546, -1000, 685, 519, 728, -1000, 503, -1000, 5206,
	150, 3781, 6861, 6861, 6861, 226, -1000, -1000, 213, 5206,
	-1000, 6861, 5654, 140, 757, 7168, 3650, -1000, 187, 290,
	563, -1000, 547, -1000, -1000, 415, -23, -1000, 4338, 4284,
	2631, 6846, 3519, -1000, -1000, -1000, 4230, -34, 6861, -1000,
	5206, 757, 185, 138, -1000, -1000, -1000, 72, -1000, -1000,
	631, -1000, -1000, -1000, -1000, 6861, -1000, 322, -1000, -1000,
	4176, -1000, -1000, 67, 4122, -1000, -1000, 563, 136, 6861,
	-1000, -1000, -1000, 135, 6206, 5206, -1000, 928, 685, 433,
	-2, -1000, -1000, 685, 728, -1000, 321, -1000, -1000, -1000,
	4068, 320, 5206, -1000, 319, 313, 290, 5654, 312, -1000,
	134, 560, 757, 183, 6075, -1000, -1000, -1000, 601, 290,
	131, -1, -1000, 24, -1000, -1000, 602, -1000, -1000, -1000,
	-1000, 412, -23, 4734, -1000, 547, 3912, 227, 310, -1000,
	-1000, -1000, 6861, 322, -1000, 6075, -34, -1000, -1000, 4014,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -12,
	-1000, 685, 392, 728, -1000, -2, -1000, 2500, 303, 6861,
	397, -1000, 777, -1000, 130, -1000, 3257, 7168, -1000, 6075,
	63, 2369, -1000, 180, 411, 129, 591, 290, 459, -1000,
	-1000, 410, -1000, -1000, -1000, 644, 611, 547, 494, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4626, -1000, -1000,
	-1000, -1000, 3024, 322, 128, 374, 408, 373, 685, -12,
	-1000, -1000, 349, 301, -1000, 126, -1000, 6861, 199, 371,
	299, 770, 591, -1000, -1000, -1000, 123, -1000, 122, -1000,
	298, 547, -1000, 200, 200, 172, -1000, 673, -1000, -1000,
	4464, -11, -1000, -33, 7010, 22, -26, -1000, -1000, 3024,
	-34, -1000, -1000, -1000, -1000, 137, -1000, -1000, 3388, 3960,
	-1000, -1000, -1000, -1000, -1000, 295, 200, 2238, 3257, -1000,
	-1000, 74, -1000, 2107, 406, 290, 405, 179, -39, 4302,
	-1000, -1000, 644, -1000, 6861, -20, -1000, -49, 7010, -1000,
	-1000, 5472, 4032, -1000, -1000, -1000, -1000, -1000, 3024, -1000,
	404, 293, -1000, 113, 547, -1000, -1000, -1000, -1000, -24,
	-1000, -1000, 642, 6861, -1000, -1000, 5206, -1000, 7010, 6861,
	-1000, -1000, 5370, -1000, 288, 286, 589, 610, 527, -1000,
	497, -1000, -1000, 1976, 3024, -1000, -1000, 403, -1000, 1845,
	1714, -1000, 179, -1000, 5206, -1000, -1000, 5206, 162, -1000,
	-1000, -1000, -1000, 547, 7110, 7010, 284, 1583, -1000, -1000,
	-1000, -1000, -1000, 290, -23, -1000, -1000, 7010, -1000, -1000,
	-1000, 1452, 109, -1000, -1000, 200, 278, -1000, -1000, -1000,
	1321, -1000,
}
var yyPgo = [...]int{

	0, 901, 900, 51, 9, 899, 3, 897, 11, 24,
	80, 47, 45, 37, 896, 30, 895, 72, 70, 73,
	894, 0, 85, 893, 890, 38, 239, 39, 20, 889,
	32, 888, 62, 54, 886, 10, 879, 878, 875, 874,
	13, 55, 872, 871, 94, 90, 199, 869, 868, 867,
	5, 865, 81, 46, 863, 141, 44, 862, 861, 857,
	856, 854, 77, 852, 851, 850, 844, 12, 841, 838,
	49, 33, 35, 2, 14, 676, 8, 691, 25, 832,
	827, 825, 41, 79, 543, 824, 126, 823, 822, 821,
	84, 818, 36, 814, 813, 29, 31, 811, 806, 28,
	799, 798, 526, 792, 18, 790, 789, 43, 788, 78,
	1, 4, 780, 17, 778, 61, 776, 773, 771, 7,
	770, 6, 764, 759, 15, 744, 730, 19, 16,
}
var yyR1 = [...]int{

	0, 125, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 6, 6, 109, 109,
	86, 86, 8, 8, 8, 7, 7, 7, 7, 7,
	7, 7, 126, 7, 7, 7, 7, 7, 7, 7,
	77, 77, 14, 14, 16, 16, 127, 127, 96, 96,
	95, 95, 102, 102, 15, 15, 18, 18, 17, 17,
	90, 90, 110, 110, 20, 20, 20, 20, 20, 20,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 88, 88, 87, 87, 24, 24,
	101, 101, 25, 10, 1, 1, 2, 2, 11, 11,
	120, 120, 75, 75, 12, 13, 27, 27, 114, 114,
	115, 115, 78, 78, 78, 78, 123, 123, 124, 124,
	23, 23, 80, 80, 80, 80, 99, 99, 99, 128,
	128, 122, 122, 66, 66, 64, 64, 68, 68, 65,
	65, 111, 111, 112, 112, 28, 28, 29, 29, 74,
	74, 72, 72, 72, 73, 73, 82, 82, 108, 108,
	30, 30, 94, 94, 32, 98, 98, 33, 33, 113,
	113, 34, 34, 34, 34, 119, 119, 81, 81, 81,
	100, 100, 35, 35, 36, 37, 37, 37, 37, 39,
	39, 38, 79, 79, 117, 117, 116, 116, 118, 118,
	76, 76, 76, 76, 76, 76, 97, 97, 40, 40,
	89, 89, 67, 19, 91, 91, 41, 92, 92, 93,
	93, 43, 42, 42, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	121, 3, 3, 104, 104, 103, 103, 50, 50, 51,
	51, 51, 51, 44, 44, 45, 45, 48, 48, 85,
	85, 85, 83, 83, 55, 55, 55, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 56, 56, 56, 21, 21, 22, 22,
	54, 57, 57, 57, 58, 58, 58, 59, 59, 59,
	59, 59, 59, 26, 26, 26, 46, 46, 46, 60,
	60, 61, 61, 61, 61, 61, 61, 52, 52, 52,
	53, 53, 53, 107, 70, 70, 106, 106, 69, 69,
	69, 69, 69, 69, 84, 84, 84, 84, 62, 62,
	62, 62, 62, 62, 62, 63, 63, 63, 63, 47,
	47, 47, 47, 47, 47, 47, 105, 105, 71,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 0,
	1, 3, 1, 3, 2, 1, 1, 1, 1, 1,
	4, 3, 0, 6, 4, 3, 4, 3, 4, 3,
	1, 1, 6, 7, 6, 7, 0, 1, 3, 1,
	3, 1, 3, 1, 1, 2, 1, 3, 1, 2,
	3, 1, 2, 0, 1, 1, 1, 1, 1, 4,
	3, 1, 1, 5, 7, 9, 5, 3, 3, 3,
	3, 3, 3, 1, 2, 6, 7, 9, 5, 1,
	6, 3, 3, 2, 0, 9, 1, 3, 0, 4,
	1, 3, 1, 11, 0, 1, 0, 1, 9, 8,
	1, 2, 1, 1, 6, 7, 0, 2, 0, 2,
	0, 2, 1, 2, 4, 3, 1, 4, 1, 4,
	1, 4, 3, 4, 4, 5, 0, 5, 4, 1,
	1, 1, 4, 5, 6, 1, 3, 6, 7, 3,
	6, 1, 0, 1, 3, 4, 6, 0, 1, 1,
	2, 1, 1, 1, 0, 2, 2, 4, 1, 3,
	1, 2, 3, 1, 1, 3, 1, 1, 3, 2,
	0, 3, 4, 3, 10, 1, 3, 1, 2, 3,
	1, 2, 2, 2, 3, 3, 3, 4, 3, 1,
	1, 3, 1, 3, 1, 1, 0, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 4,
	3, 1, 4, 4, 3, 1, 1, 0, 1, 3,
	1, 8, 3, 2, 6, 5, 3, 4, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 5, 4,
	3, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 3, 2, 1, 2, 4, 2, 11, 12,
	0, 0, 1, 0, 4, 3, 1, 1, 2, 2,
	4, 4, 2, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 0, 1, 4, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 3,
	3, 1, 1, 1, 3, 3, 1, 1, 0, 1,
	1, 1, 3, 1, 1, 3, 1, 1, 4, 4,
	4, 4, 1, 1, 1, 3, 1, 4, 2, 3,
	3, 1, 4, 4, 3, 3, 3, 1, 3, 1,
	1, 3, 1, 1, 0, 1, 3, 1, 3, 1,
	4, 2, 6, 4, 2, 2, 1, 2, 1, 4,
	3, 3, 3, 6, 3, 1, 1, 2, 1, 5,
	4, 2, 2, 4, 2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -125, -109, -7, -9, -10, -11, -12, -13, 51,
	79, 44, 38, 119, -64, -65, 21, 20, 23, 30,
	34, 35, 39, 46, 98, 19, 14, -21, 48, 25,
	27, 121, 40, 43, 36, 10, 37, -120, 52, 53,
	54, -66, -68, -26, -31, -75, 7, -59, -60, -57,
	59, 125, 92, 104, 105, 130, 129, 131, 132, 123,
	-42, -47, 107, 108, 109, 110, 111, 112, 113, 6,
	133, -49, 118, 96, 97, 106, 99, 100, -46, -56,
	-51, -44, -54, -55, 91, 49, 50, 4, 5, 84,
	85, 86, 8, 9, 66, 67, 81, 63, 64, 65,
	80, 62, 74, 117, 12, 134, -8, -58, 60, 18,
	-86, 82, 123, 82, -86, 119, 10, -16, -77, -102,
	-86, 82, 37, 38, -17, -18, -90, -19, 10, -110,
	123, -9, 37, 79, 123, 123, -22, -21, 98, -22,
	-22, -94, -32, -46, -98, 37, -33, 12, -91, -41,
	-21, 121, 149, 150, 87, 89, 88, 151, 128, 152,
	163, 130, 129, 164, 167, 165, 166, 161, 162, 155,
	156, 153, 154, 157, 158, 159, 160, 115, 90, 127,
	114, 123, 123, 123, 119, -21, 10, 122, -3, 128,
	52, -75, 10, 10, 10, 93, 94, 93, 95, 94,
	136, 137, 138, 139, 148, 140, 141, 142, 143, 144,
	145, 146, 147, 104, 105, 123, 125, 119, 57, 123,
	-107, -106, -70, -69, -21, 128, 59, -21, -26, -56,
	123, -55, 98, 125, -26, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -48, 123, -21,
	-85, 17, -84, -62, 12, 76, 77, -21, -21, -21,
	125, 78, 78, -45, -43, -44, -61, 52, -8, -46,
	123, 123, -21, -21, 123, -21, -21, 17, 75, -84,
	-84, 17, 119, -46, -82, 123, -82, 123, 82, -86,
	124, -86, 121, -126, -109, 121, -14, -102, -86, 82,
	121, 135, 82, 29, -86, -18, 121, 135, 136, -20,
	120, -9, -10, -11, -12, -13, 51, -21, 21, -3,
	-92, -93, -21, -21, 121, 121, 121, 121, 135, 121,
	135, -3, 136, 121, 135, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -45, -21, 122, -21, -101, -25, -26, -21, -90,
	-110, 121, 121, 10, -121, 10, -27, 55, -121, -114,
	55, 123, -9, 123, 121, 122, -21, 128, -21, -21,
	-21, -21, -21, -21, -21, -21, -21, -21, -21, -21,
	-21, -22, -21, -53, 10, 119, -46, -107, 126, 135,
	58, -26, 123, -21, -107, 124, -22, 118, -62, -62,
	17, 125, 57, -21, 11, -26, 58, -22, -52, -6,
	-46, 119, 10, -5, -4, 98, 99, 100, 101, 102,
	103, 4, 5, 84, 85, 86, 87, 88, 89, 90,
	91, 92, 6, 7, 93, 94, 95, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 35,
	36, 37, 38, 39, 96, 97, 59, 30, 31, 32,
	33, 34, 60, 61, 55, 56, 79, 53, 54, 52,
	62, 63, 65, 64, 66, 67, 81, 80, -52, -6,
	-46, -83, -82, 78, 125, 119, 57, 78, -83, -105,
	-71, -21, -21, -21, 75, 75, 117, -21, 124, -108,
	-30, -21, 83, -107, 10, 121, 119, 120, 121, 121,
	82, -86, -17, 82, -86, 119, 10, 82, -19, -21,
	123, 124, 123, 121, 135, 124, -32, -33, -121, -21,
	-41, 122, -21, -127, 135, 29, 124, 120, -121, 123,
	-27, -115, 56, -8, 119, -121, -119, -8, -21, -21,
	-110, -21, 124, 126, 120, -82, -21, 124, 136, -70,
	-21, 128, 59, -107, 124, 126, 124, -63, 10, 13,
	129, 12, 10, 120, 120, 125, 120, -21, 126, -82,
	-21, -82, -46, -22, -21, -53, -46, -27, -127, 135,
	124, 124, 120, -127, 135, -21, 124, -109, 119, 82,
	-96, -15, -18, -77, 119, -121, 124, -122, -9, 122,
	-21, -92, -21, -80, 119, 122, 123, -21, 124, -25,
	-78, -26, 128, 59, 125, -23, -9, 122, -88, 123,
	-111, -112, -28, -29, -74, -72, 127, 60, 61, -8,
	-115, -121, -119, -113, 119, 135, 124, 124, 95, -9,
	122, 120, 136, -21, -26, 123, 124, 126, 13, -21,
	120, 126, 120, -115, 124, -71, 124, -30, 120, -95,
	-18, 119, -127, 135, -18, -96, 121, -110, 124, 121,
	-99, 121, -99, 121, -111, 121, 124, 58, -26, 123,
	-107, -110, -24, 41, 42, -111, 124, 135, -1, 128,
	-72, -121, 119, 120, -34, -117, -116, 44, -118, 47,
	-76, 103, 102, 101, 98, 99, 100, -113, -8, -9,
	122, 121, -110, -21, -107, 126, -121, -127, 135, -95,
	120, -15, -127, 22, 121, -92, 120, 32, 33, -99,
	31, -99, 124, -124, -9, 122, -78, -26, -107, 126,
	28, 123, 119, 124, -104, 44, -28, -2, 83, 119,
	-113, -97, -40, 12, 38, 37, -119, -76, 120, -110,
	124, 120, 119, 120, -18, -127, 120, 121, 124, -21,
	-128, 122, 121, 120, 121, 31, -104, -110, 124, 124,
	121, -87, -8, -110, -73, 122, -73, 123, 12, -113,
	120, 121, 135, -121, 136, -89, -67, -6, -3, -81,
	121, 119, -113, 120, -123, -9, 122, -128, -110, 121,
	-73, 26, -124, 12, 151, 120, 119, -74, 119, -103,
	-50, 12, 128, 136, 120, -40, -21, 121, 135, 136,
	-6, 120, -100, -35, -36, -37, -38, -39, -8, -6,
	79, 10, 120, -110, -110, 119, 121, 124, -8, -110,
	-110, 124, 135, 12, -21, -121, -67, -21, -121, 120,
	-35, 121, 121, 45, 29, 78, 24, -110, 119, 120,
	120, -50, -121, 123, -119, 10, -4, -76, -6, 121,
	120, -110, -111, -6, 120, 124, -73, -79, 121, 119,
	-110, 120,
}
var yyDef = [...]int{

	79, -2, 1, 78, 85, 86, 87, 88, 89, 0,
	0, 0, 0, 123, 131, 132, 0, 0, 0, 0,
	418, 418, 418, 0, 383, 0, 143, 0, 0, 0,
	0, 149, 0, 0, 0, 80, 371, 0, 0, 0,
	0, 205, 0, -2, 417, 170, 0, -2, 434, 420,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 351, 0, 0, 0, 0, 0, 0, 0, 387,
	0, 361, 389, 0, 364, 0, 172, 173, 427, 412,
	432, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 0, 0, 436, 0, -2, 0, 0, 396,
	82, 0, 0, 0, 92, 79, 80, 0, 0, 0,
	116, 0, 100, 101, 113, 118, 0, 121, 0, 0,
	0, 0, 371, 0, 287, 0, 0, 419, 383, 0,
	0, 0, 233, 234, 0, 371, 236, 237, 0, 285,
	286, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 153, 370, 372,
	0, 171, 176, 370, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 313, 0, 418, 0, 0, 454,
	0, 453, 457, 455, 459, 0, 0, 298, -2, 0,
	0, -2, 383, 454, -2, 332, 333, 334, 335, 0,
	352, 353, 354, 355, 356, 357, 358, 359, 418, 360,
	0, 390, 391, 466, 468, 0, 0, 363, 365, 367,
	418, 0, 0, 392, 293, 385, 386, 392, 384, 441,
	0, 0, 481, 482, 0, 484, 485, 0, 408, 0,
	0, 0, 0, 438, 379, 0, 382, 454, 0, 84,
	0, 83, 91, 0, 0, 95, 0, 0, 116, 0,
	97, 0, 0, 0, 116, 119, 99, 0, 0, 122,
	130, 124, 125, 126, 127, 128, 0, 0, 0, 370,
	0, 288, 290, 0, 137, 138, 139, 140, 0, 141,
	0, 370, 0, 142, 0, 315, 316, 317, 318, 319,
	320, 321, 322, 323, 324, 325, 326, 327, 328, 329,
	330, 331, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 345, 0, 0, 350, 106, 160, -2, 0, 0,
	0, 151, 152, 370, 0, 176, 180, 0, 0, 370,
	0, 0, 206, 0, 209, 123, 296, 0, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 0, 435, 450, 0, 452, 0, 395, 454,
	0, -2, 454, 0, 0, -2, 0, 362, 467, 464,
	465, 0, 0, 0, 0, 421, 0, 0, 0, -2,
	-2, 0, 76, 77, 69, 70, 71, 72, 73, 74,
	75, 2, 3, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
	41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 0, -2,
	-2, 292, 393, 0, 418, 0, 0, 0, 176, 106,
	486, 488, 0, 0, 407, 410, 409, 0, 226, 106,
	228, 230, 0, 0, 81, 90, 79, 94, 96, 98,
	0, 116, 112, 0, 116, 0, 117, 0, 120, 370,
	0, 0, 0, 287, 0, 0, 232, 235, 0, 238,
	284, 0, 349, 0, 107, 0, 0, 154, 0, -2,
	180, 370, 0, 177, 240, 0, 179, 245, 0, 0,
	0, 297, 0, 428, 430, 431, 0, 0, 0, 456,
	458, 0, 0, 0, -2, 395, 388, 0, 475, 476,
	0, 478, 470, 471, 472, 0, 474, 366, 429, 380,
	0, 381, 445, 0, 0, 444, 446, 180, 0, 107,
	480, 483, 437, 0, 107, 231, 394, 0, 0, 0,
	106, 109, 114, 0, 0, 283, 0, 133, 201, 123,
	0, 0, 289, 136, 196, 196, -2, 348, 0, 161,
	0, -2, 0, 0, 454, 148, 190, 123, 158, -2,
	0, 211, 213, 164, 218, 219, 0, 221, 222, 223,
	370, 0, 181, 266, 240, 0, 0, 0, 0, 203,
	123, 451, 0, 295, -2, 454, 463, 469, 477, 0,
	448, 442, 443, 370, 479, 487, 227, 229, 93, 106,
	111, 0, 0, 107, 115, 106, 129, 0, 0, 287,
	0, 196, 0, 196, 0, 145, 0, 0, -2, 454,
	0, 0, 150, 0, 0, 0, 373, 217, 166, 165,
	220, 0, 240, 174, 239, 0, 0, 0, -2, 265,
	268, 270, 271, 272, 273, 274, 275, 266, 246, 204,
	123, 210, 207, 294, 0, 0, 0, 0, 107, 106,
	104, 108, 0, 0, 134, 0, 192, 0, 0, 0,
	0, 0, 373, 146, 188, 123, 0, -2, 0, -2,
	0, 0, 123, 224, 224, 0, 214, 0, 167, 240,
	266, 0, 277, 370, 0, 371, 0, 269, 175, 208,
	462, 473, 240, 102, 110, 0, 105, 202, 0, 0,
	123, 199, 200, 193, 194, 0, 224, 0, 0, 184,
	191, 0, 156, 0, 0, 0, 0, 0, 215, 266,
	169, 241, 0, 278, 0, 0, 281, 0, 0, 243,
	247, 0, 266, 103, 135, 186, 123, 123, 198, 195,
	0, 0, 147, 0, 0, 159, 123, 225, 123, 0,
	376, 377, 0, 0, 168, 276, 370, 242, 0, 0,
	370, 248, 0, 250, 0, 0, 260, 0, 0, 259,
	57, -2, 291, 0, 197, 123, 189, 0, 157, 0,
	0, 374, 0, 378, 216, 279, 280, 370, 0, 249,
	251, 252, 253, 0, 0, 0, 0, 0, 123, 163,
	368, 375, 282, -2, 254, 255, 256, 258, 261, 187,
	369, 0, 0, 257, 155, 224, 0, 244, 262, 123,
	0, 263,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:257
		{
			rootnode = stmt.NewStmtList(yyDollar[1].list)
			positions.AddPosition(rootnode, positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:274
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:275
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:275
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:275
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:275
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:275
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:275
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:279
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:280
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:284
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:285
		{
			yyVAL.list = []node.Node{}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:290
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:297
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:307
		{
			var NSName string
			if namespace != "" {
				NSName = namespace + "\\" + joinNamespaceParts(yyDollar[1].list)
			} else {
				NSName = joinNamespaceParts(yyDollar[1].list)
			}

			yyVAL.node = name.NewName(yyDollar[1].list, NSName)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:320
		{
			var NSName string
			if namespace != "" {
				NSName = namespace + "\\" + joinNamespaceParts(yyDollar[3].list)
			} else {
				NSName = joinNamespaceParts(yyDollar[3].list)
			}

			yyVAL.node = name.NewRelative(yyDollar[3].list, NSName)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:333
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list, joinNamespaceParts(yyDollar[2].list))
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:341
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:342
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:343
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:344
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:345
		{
			yyVAL.node = yyDollar[1].node
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:346
		{
			yyVAL.node = stmt.NewHaltCompiler()
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:348
		{
			namespace = joinNamespaceParts(yyDollar[2].list)

			name := name.NewName(yyDollar[2].list, joinNamespaceParts(yyDollar[2].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:359
		{
			namespace = joinNamespaceParts(yyDollar[2].list)
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:360
		{
			name := name.NewName(yyDollar[2].list, joinNamespaceParts(yyDollar[2].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[5].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())

			namespace = ""
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:372
		{
			namespace = ""

			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:379
		{
			yyVAL.node = yyDollar[2].node
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:380
		{
			yyVAL.node = yyDollar[3].node.(*stmt.GroupUse).SetUseType(yyDollar[2].node)
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:382
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:387
		{
			yyVAL.node = stmt.NewUseList(yyDollar[2].node, yyDollar[3].list)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:389
		{
			yyVAL.node = stmt.NewConstList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:398
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:404
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:413
		{
			name := name.NewName(yyDollar[1].list, namespace+"\\"+joinNamespaceParts(yyDollar[1].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[6].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:423
		{
			name := name.NewName(yyDollar[2].list, namespace+"\\"+joinNamespaceParts(yyDollar[2].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[5].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 104:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:436
		{
			name := name.NewName(yyDollar[1].list, namespace+"\\"+joinNamespaceParts(yyDollar[1].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[6].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:446
		{
			name := name.NewName(yyDollar[2].list, namespace+"\\"+joinNamespaceParts(yyDollar[2].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewGroupUse(nil, name, yyDollar[5].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:464
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:465
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:470
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:471
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:475
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:476
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:480
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:481
		{
			yyVAL.node = yyDollar[2].node.(*stmt.Use).SetUseType(yyDollar[1].node)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:486
		{
			name := name.NewName(yyDollar[1].list, namespace+"\\"+joinNamespaceParts(yyDollar[1].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:496
		{
			name := name.NewName(yyDollar[1].list, namespace+"\\"+joinNamespaceParts(yyDollar[1].list))
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:511
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:512
		{
			yyVAL.node = yyDollar[2].node
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:516
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:517
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:521
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:522
		{
			yyVAL.list = []node.Node{}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:526
		{
			yyVAL.node = yyDollar[1].node
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:527
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:528
		{
			yyVAL.node = yyDollar[1].node
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:529
		{
			yyVAL.node = yyDollar[1].node
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:530
		{
			yyVAL.node = yyDollar[1].node
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:532
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:540
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:545
		{
			yyVAL.node = yyDollar[1].node
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:546
		{
			yyVAL.node = yyDollar[1].node
		}
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:548
		{
			if yyDollar[5].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltWhile(yyDollar[3].node, yyDollar[5].altSyntaxNode.node)
			} else {
				yyVAL.node = stmt.NewWhile(yyDollar[3].node, yyDollar[5].altSyntaxNode.node)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:558
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:564
		{
			if yyDollar[9].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].altSyntaxNode.node)
			} else {
				yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].altSyntaxNode.node)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:574
		{
			if yyDollar[5].nodesWithEndToken.endToken.Value == ";" {
				yyVAL.node = stmt.NewAltSwitch(yyDollar[3].node, yyDollar[5].nodesWithEndToken.nodes)
			} else {
				yyVAL.node = stmt.NewSwitch(yyDollar[3].node, yyDollar[5].nodesWithEndToken.nodes)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:584
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:590
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:596
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:602
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:608
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:614
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:620
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:626
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:632
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:638
		{
			if yyDollar[7].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[7].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[7].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 147:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:648
		{
			if yyDollar[9].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, yyDollar[5].node, yyDollar[7].foreachVariable.node, yyDollar[9].altSyntaxNode.node, yyDollar[7].foreachVariable.byRef)
			} else {
				yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].node, yyDollar[7].foreachVariable.node, yyDollar[9].altSyntaxNode.node, yyDollar[7].foreachVariable.byRef)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:658
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:664
		{
			yyVAL.node = stmt.NewNop()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:670
		{
			if yyDollar[6].node == nil {
				yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:682
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:688
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(label, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:698
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(label, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:709
		{
			yyVAL.list = []node.Node{}
		}
	case 155:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:711
		{
			identifier := node.NewIdentifier(yyDollar[5].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[5].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[5].token))
			catch := stmt.NewCatch(yyDollar[4].list, variable, yyDollar[8].list)
			positions.AddPosition(catch, positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[9].token))
			yyVAL.list = append(yyDollar[1].list, catch)

			comments.AddComments(identifier, yyDollar[5].token.Comments())
			comments.AddComments(variable, yyDollar[5].token.Comments())
			comments.AddComments(catch, yyDollar[2].token.Comments())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:726
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:727
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:731
		{
			yyVAL.node = nil
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:733
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:741
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:742
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:746
		{
			yyVAL.node = yyDollar[1].node
		}
	case 163:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php7/php7.y:751
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewFunction(name, yyDollar[2].boolWithToken.value, yyDollar[6].list, yyDollar[8].node, yyDollar[10].list, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token))

			comments.AddComments(name, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:763
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:764
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:768
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:769
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 168:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php7/php7.y:774
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewClass(name, yyDollar[1].list, nil, yyDollar[4].node, yyDollar[5].list, yyDollar[8].list, yyDollar[6].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token))

			comments.AddComments(name, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 169:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php7/php7.y:784
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewClass(name, nil, nil, yyDollar[3].node, yyDollar[4].list, yyDollar[7].list, yyDollar[5].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:796
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:797
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:802
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:808
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:817
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewTrait(name, yyDollar[5].list, yyDollar[3].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:830
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewInterface(name, yyDollar[3].list, yyDollar[6].list, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[7].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:842
		{
			yyVAL.node = nil
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:843
		{
			yyVAL.node = yyDollar[2].node
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:847
		{
			yyVAL.list = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:848
		{
			yyVAL.list = yyDollar[2].list
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:852
		{
			yyVAL.list = nil
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:853
		{
			yyVAL.list = yyDollar[2].list
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:857
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:858
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:860
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:867
		{
			list := expr.NewShortList(yyDollar[2].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:877
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:879
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			positions.AddPosition(yyVAL.altSyntaxNode.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:887
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:889
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			positions.AddPosition(yyVAL.altSyntaxNode.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:896
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:898
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:906
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:907
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:908
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 195:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:909
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:913
		{
			yyVAL.list = []node.Node{}
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:915
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			positions.AddPosition(_case, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:922
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			positions.AddPosition(_default, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:937
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:939
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			positions.AddPosition(yyVAL.altSyntaxNode.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:947
		{
			yyVAL.node = stmt.NewIf(yyDollar[3].node, yyDollar[5].node, nil, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 204:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:953
		{
			_elseIf := stmt.NewElseIf(yyDollar[4].node, yyDollar[6].node)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node))
			yyVAL.node = yyDollar[1].node.(*stmt.If).AddElseIf(_elseIf)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))

			comments.AddComments(_elseIf, yyDollar[2].token.Comments())
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:964
		{
			yyVAL.node = yyDollar[1].node
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:966
		{
			_else := stmt.NewElse(yyDollar[3].node)
			positions.AddPosition(_else, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node))
			yyVAL.node = yyDollar[1].node.(*stmt.If).SetElse(_else)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())
		}
	case 207:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:978
		{
			stmts := stmt.NewStmtList(yyDollar[6].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[6].list))
			yyVAL.node = stmt.NewAltIf(yyDollar[3].node, stmts, nil, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list))

			comments.AddComments(stmts, yyDollar[5].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 208:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php7/php7.y:988
		{
			stmts := stmt.NewStmtList(yyDollar[7].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[7].list))
			_elseIf := stmt.NewAltElseIf(yyDollar[4].node, stmts)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list))
			yyVAL.node = yyDollar[1].node.(*stmt.AltIf).AddElseIf(_elseIf)

			comments.AddComments(stmts, yyDollar[6].token.Comments())
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1002
		{
			yyVAL.node = yyDollar[1].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))
		}
	case 210:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:1007
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[4].list))
			_else := stmt.NewAltElse(stmts)
			positions.AddPosition(_else, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.node = yyDollar[1].node.(*stmt.AltIf).SetElse(_else)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token))

			comments.AddComments(stmts, yyDollar[3].token.Comments())
			comments.AddComments(_else, yyDollar[2].token.Comments())
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1021
		{
			yyVAL.list = yyDollar[1].list
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1022
		{
			yyVAL.list = nil
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1026
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1027
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1032
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))

			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			if yyDollar[1].node != nil {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[2].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[3].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 216:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:1060
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))

			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			if yyDollar[1].node != nil {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[2].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[3].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1090
		{
			yyVAL.node = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1091
		{
			yyVAL.node = yyDollar[1].node
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1095
		{
			yyVAL.node = yyDollar[1].node
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1097
		{
			yyVAL.node = node.NewNullable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1106
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1112
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1117
		{
			yyVAL.node = yyDollar[1].node
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1121
		{
			yyVAL.node = nil
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1122
		{
			yyVAL.node = yyDollar[2].node
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1126
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1127
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1131
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1132
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1137
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1143
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1151
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1152
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1156
		{
			yyVAL.node = yyDollar[1].node
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1160
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1161
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1166
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewStaticVar(variable, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1179
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewStaticVar(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1194
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1195
		{
			yyVAL.list = []node.Node{}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1200
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1206
		{
			yyVAL.node = stmt.NewClassConstList(yyDollar[1].list, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1212
		{
			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 244:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php7/php7.y:1218
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].boolWithToken.value, yyDollar[7].list, yyDollar[9].node, yyDollar[10].nodesWithEndToken.nodes, yyDollar[5].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[10].nodesWithEndToken.endToken))

			comments.AddComments(name, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1230
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1231
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1235
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1236
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[2].token}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1237
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1241
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1242
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1246
		{
			yyVAL.node = yyDollar[1].node
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1247
		{
			yyVAL.node = yyDollar[1].node
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1252
		{
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1261
		{
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, nil, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1271
		{
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, nil, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1281
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1291
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1300
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewTraitMethodRef(nil, name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1309
		{
			yyVAL.node = yyDollar[1].node
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1314
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1326
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1327
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1331
		{
			yyVAL.list = yyDollar[1].list
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1333
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(modifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{modifier}
			comments.AddComments(modifier, yyDollar[1].token.Comments())
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1342
		{
			yyVAL.list = nil
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1343
		{
			yyVAL.list = yyDollar[1].list
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1347
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1348
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1353
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1359
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1365
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1371
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1377
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1383
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1391
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1392
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1397
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewProperty(variable, nil, yyDollar[2].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1410
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewProperty(variable, yyDollar[3].node, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1425
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1426
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1431
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewConstant(name, yyDollar[3].node, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1444
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewConstant(name, yyDollar[3].node, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1456
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1457
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1461
		{
			yyVAL.node = yyDollar[1].node
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1465
		{
			yyVAL.list = nil
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1466
		{
			yyVAL.list = yyDollar[1].list
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1469
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1470
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 291:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php7/php7.y:1475
		{
			if yyDollar[2].nodesWithEndToken != nil {
				yyVAL.node = stmt.NewClass(nil, nil, yyDollar[2].nodesWithEndToken.nodes, yyDollar[3].node, yyDollar[4].list, yyDollar[7].list, yyDollar[5].str)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			} else {
				yyVAL.node = stmt.NewClass(nil, nil, nil, yyDollar[3].node, yyDollar[4].list, yyDollar[7].list, yyDollar[5].str)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1490
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1501
		{
			yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:1506
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign.NewAssign(list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:1516
		{
			shortList := expr.NewShortList(yyDollar[2].list)
			positions.AddPosition(shortList, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yyVAL.node = assign.NewAssign(shortList, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))

			comments.AddComments(shortList, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1526
		{
			yyVAL.node = assign.NewAssign(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1532
		{
			yyVAL.node = assign.NewAssignRef(yyDollar[1].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1538
		{
			yyVAL.node = expr.NewClone(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1544
		{
			yyVAL.node = assign.NewPlus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1550
		{
			yyVAL.node = assign.NewMinus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1556
		{
			yyVAL.node = assign.NewMul(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1562
		{
			yyVAL.node = assign.NewPow(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1568
		{
			yyVAL.node = assign.NewDiv(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1574
		{
			yyVAL.node = assign.NewConcat(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1580
		{
			yyVAL.node = assign.NewMod(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1586
		{
			yyVAL.node = assign.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1592
		{
			yyVAL.node = assign.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1598
		{
			yyVAL.node = assign.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1604
		{
			yyVAL.node = assign.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1610
		{
			yyVAL.node = assign.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1616
		{
			yyVAL.node = expr.NewPostInc(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1622
		{
			yyVAL.node = expr.NewPreInc(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1628
		{
			yyVAL.node = expr.NewPostDec(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1634
		{
			yyVAL.node = expr.NewPreDec(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1640
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1646
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1652
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1658
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1664
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1670
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1676
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1682
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1688
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1694
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1700
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1706
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1712
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1718
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1724
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1730
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1736
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1742
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1748
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1754
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1760
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1766
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1772
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1778
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1784
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1790
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1796
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1802
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1808
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1814
		{
			yyVAL.node = binary.NewSpaceship(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1820
		{
			yyVAL.node = expr.NewInstanceOf(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1825
		{
			yyVAL.node = yyDollar[2].node
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1826
		{
			yyVAL.node = yyDollar[1].node
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:1828
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1834
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1840
		{
			yyVAL.node = binary.NewCoalesce(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1845
		{
			yyVAL.node = yyDollar[1].node
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1847
		{
			yyVAL.node = cast.NewCastInt(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1853
		{
			yyVAL.node = cast.NewCastDouble(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1859
		{
			yyVAL.node = cast.NewCastString(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1865
		{
			yyVAL.node = cast.NewCastArray(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1871
		{
			yyVAL.node = cast.NewCastObject(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1877
		{
			yyVAL.node = cast.NewCastBool(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1883
		{
			yyVAL.node = cast.NewCastUnset(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1889
		{
			if strings.EqualFold(yyDollar[1].token.Value, "die") {
				yyVAL.node = expr.NewDie(yyDollar[2].node)
			} else {
				yyVAL.node = expr.NewExit(yyDollar[2].node)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1899
		{
			yyVAL.node = expr.NewErrorSuppress(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1904
		{
			yyVAL.node = yyDollar[1].node
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1906
		{
			yyVAL.node = expr.NewShellExec(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1912
		{
			yyVAL.node = expr.NewPrint(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1918
		{
			yyVAL.node = expr.NewYield(nil, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1924
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1930
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1936
		{
			yyVAL.node = expr.NewYieldFrom(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 368:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line php7/php7.y:1942
		{
			yyVAL.node = expr.NewClosure(yyDollar[5].list, yyDollar[7].list, yyDollar[8].node, yyDollar[10].list, false, yyDollar[2].boolWithToken.value, yyDollar[3].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[11].token))

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 369:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line php7/php7.y:1949
		{
			yyVAL.node = expr.NewClosure(yyDollar[6].list, yyDollar[8].list, yyDollar[9].node, yyDollar[11].list, true, yyDollar[3].boolWithToken.value, yyDollar[4].str)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[12].token))

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1958
		{
			yyVAL.str = yylex.(*lexer).PhpDocComment
			yylex.(*lexer).PhpDocComment = ""
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1962
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1963
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:1967
		{
			yyVAL.list = []node.Node{}
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:1968
		{
			yyVAL.list = yyDollar[3].list
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:1972
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1973
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:1978
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewClosureUse(variable, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:1991
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewClosureUse(variable, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2007
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2013
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2019
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2025
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2034
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2039
		{
			yyVAL.node = yyDollar[1].node
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2043
		{
			yyVAL.node = yyDollar[1].node
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2044
		{
			yyVAL.node = yyDollar[1].node
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2048
		{
			yyVAL.node = nil
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2049
		{
			yyVAL.node = yyDollar[2].node
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2053
		{
			yyVAL.list = []node.Node{}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2054
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token.Value)}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2055
		{
			yyVAL.list = yyDollar[1].list
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2059
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2060
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2065
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2071
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2077
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2086
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2092
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2098
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2104
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2110
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2116
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2122
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2128
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2134
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2140
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2146
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)) /* TODO: mark as Heredoc*/
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2151
		{
			yyVAL.node = scalar.NewEncapsed(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2157
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2163
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2168
		{
			yyVAL.node = yyDollar[1].node
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2169
		{
			yyVAL.node = yyDollar[1].node
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2174
		{
			yyVAL.node = expr.NewConstFetch(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2180
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2190
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2202
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2203
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2207
		{
			yyVAL.node = nil
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2208
		{
			yyVAL.node = yyDollar[1].node
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2212
		{
			yyVAL.node = yyDollar[1].node
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2216
		{
			yyVAL.node = yyDollar[1].node
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2217
		{
			yyVAL.node = yyDollar[2].node
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2218
		{
			yyVAL.node = yyDollar[1].node
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2222
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2223
		{
			yyVAL.node = yyDollar[2].node
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2224
		{
			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2228
		{
			yyVAL.node = yyDollar[1].node
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2230
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2236
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2242
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2248
		{
			yyVAL.node = expr.NewMethodCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2253
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2257
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2258
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2260
		{
			yyVAL.node = expr.NewPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2269
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2279
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2285
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2294
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2300
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2308
		{
			yyVAL.node = yyDollar[1].node
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2310
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2316
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2322
		{
			yyVAL.node = expr.NewPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2328
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2334
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2343
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2348
		{
			yyVAL.node = yyDollar[2].node
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2349
		{
			yyVAL.node = yyDollar[1].node
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2354
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2359
		{
			yyVAL.node = yyDollar[2].node
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2360
		{
			yyVAL.node = yyDollar[1].node
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2365
		{
			if yyDollar[1].list[len(yyDollar[1].list)-1] == nil {
				yyVAL.list = yyDollar[1].list[:len(yyDollar[1].list)-1]
			} else {
				yyVAL.list = yyDollar[1].list
			}
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php7/php7.y:2375
		{
			yyVAL.node = nil
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2376
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2381
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2382
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2387
		{
			yyVAL.node = expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2393
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2399
		{
			yyVAL.node = expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2405
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[2].node, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:2411
		{
			// TODO: Cannot use list() as standalone expression
			list := expr.NewList(yyDollar[5].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[6].token))
			yyVAL.node = expr.NewArrayItem(yyDollar[1].node, list, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token))

			comments.AddComments(list, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2422
		{
			// TODO: Cannot use list() as standalone expression
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = expr.NewArrayItem(nil, list, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2435
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2437
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2443
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2445
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2455
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2465
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2478
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(fetch, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(fetch, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2494
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2500
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php7/php7.y:2510
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2523
		{
			yyVAL.node = yyDollar[2].node
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2527
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2533
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2545
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[2].token.Value); err == nil {
				lnumber := scalar.NewLnumber(yyDollar[2].token.Value)
				positions.AddPosition(lnumber, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
				yyVAL.node = expr.NewUnaryMinus(lnumber)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

				comments.AddComments(lnumber, yyDollar[1].token.Comments())
			} else {
				yyDollar[2].token.Value = "-" + yyDollar[2].token.Value
				yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2563
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php7/php7.y:2576
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2582
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2588
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2594
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php7/php7.y:2600
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2606
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php7/php7.y:2612
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2620
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php7/php7.y:2621
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php7/php7.y:2625
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}
