//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	"strconv"
	"strings"

	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign"
	"github.com/z7zmey/php-parser/node/expr/binary"
	"github.com/z7zmey/php-parser/node/expr/cast"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/token"
)

//line php5/php5.y:21
type yySymType struct {
	yys                     int
	node                    node.Node
	token                   token.Token
	boolWithToken           boolWithToken
	list                    []node.Node
	foreachVariable         foreachVariable
	nodesWithEndToken       *nodesWithEndToken
	simpleIndirectReference simpleIndirectReference
	altSyntaxNode           altSyntaxNode
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_DIV_EQUAL = 57462
const T_CONCAT_EQUAL = 57463
const T_MOD_EQUAL = 57464
const T_AND_EQUAL = 57465
const T_OR_EQUAL = 57466
const T_XOR_EQUAL = 57467
const T_SL_EQUAL = 57468
const T_SR_EQUAL = 57469
const T_POW_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_IS_EQUAL = 57473
const T_IS_NOT_EQUAL = 57474
const T_IS_IDENTICAL = 57475
const T_IS_NOT_IDENTICAL = 57476
const T_IS_SMALLER_OR_EQUAL = 57477
const T_IS_GREATER_OR_EQUAL = 57478
const T_SL = 57479
const T_SR = 57480
const T_POW = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'='",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_POW_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"'|'",
	"'^'",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"'<'",
	"T_IS_SMALLER_OR_EQUAL",
	"'>'",
	"T_IS_GREATER_OR_EQUAL",
	"T_SL",
	"T_SR",
	"'.'",
	"'*'",
	"'/'",
	"'%'",
	"T_POW",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:3800

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 50,
	104, 433,
	105, 433,
	-2, 431,
	-1, 101,
	78, 330,
	-2, 409,
	-1, 113,
	78, 449,
	123, 445,
	-2, 455,
	-1, 153,
	104, 433,
	105, 433,
	-2, 431,
	-1, 203,
	121, 304,
	124, 304,
	-2, 428,
	-1, 204,
	104, 433,
	105, 433,
	121, 305,
	124, 305,
	-2, 431,
	-1, 270,
	78, 449,
	-2, 455,
	-1, 297,
	78, 332,
	-2, 411,
	-1, 301,
	123, 446,
	-2, 456,
	-1, 310,
	78, 331,
	-2, 410,
	-1, 376,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 272,
	-1, 377,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 273,
	-1, 378,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 274,
	-1, 379,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 275,
	-1, 380,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 276,
	-1, 381,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 277,
	-1, 382,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 278,
	-1, 383,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 279,
	-1, 390,
	104, 433,
	105, 433,
	-2, 431,
	-1, 398,
	124, 140,
	-2, 145,
	-1, 460,
	104, 433,
	105, 433,
	124, 512,
	135, 512,
	-2, 431,
	-1, 461,
	124, 513,
	135, 513,
	-2, 428,
	-1, 462,
	104, 433,
	105, 433,
	-2, 431,
	-1, 484,
	124, 154,
	135, 154,
	-2, 428,
	-1, 485,
	104, 433,
	105, 433,
	124, 155,
	135, 155,
	-2, 431,
	-1, 491,
	123, 470,
	-2, 514,
	-1, 497,
	123, 470,
	-2, 515,
	-1, 519,
	78, 330,
	-2, 367,
	-1, 549,
	124, 140,
	-2, 145,
	-1, 562,
	124, 140,
	-2, 145,
	-1, 579,
	121, 306,
	124, 306,
	-2, 428,
	-1, 580,
	104, 433,
	105, 433,
	121, 307,
	124, 307,
	-2, 431,
	-1, 679,
	78, 332,
	-2, 369,
	-1, 777,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 395,
	-1, 778,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 396,
	-1, 779,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 397,
	-1, 780,
	153, 0,
	154, 0,
	155, 0,
	156, 0,
	-2, 398,
	-1, 781,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 399,
	-1, 782,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 400,
	-1, 783,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 401,
	-1, 784,
	157, 0,
	158, 0,
	159, 0,
	160, 0,
	-2, 402,
	-1, 787,
	78, 331,
	-2, 368,
	-1, 837,
	37, 199,
	-2, 196,
	-1, 969,
	29, 187,
	-2, 4,
	-1, 978,
	124, 140,
	-2, 145,
	-1, 995,
	121, 191,
	-2, 193,
}

const yyPrivate = 57344

const yyLast = 8441

var yyAct = [...]int{

	101, 569, 1004, 963, 113, 199, 841, 712, 824, 122,
	130, 418, 338, 916, 563, 592, 604, 60, 450, 565,
	813, 805, 295, 732, 472, 681, 459, 590, 419, 141,
	577, 97, 38, 263, 388, 137, 139, 442, 542, 144,
	314, 114, 430, 157, 318, 445, 129, 178, 329, 117,
	328, 6, 483, 5, 475, 227, 227, 161, 2, 651,
	651, 976, 288, 653, 652, 191, 42, 651, 25, 939,
	905, 938, 957, 935, 651, 491, 951, 120, 653, 652,
	266, 191, 932, 929, 270, 937, 515, 952, 1000, 250,
	257, 673, 675, 674, 676, 661, 662, 663, 654, 656,
	657, 655, 655, 297, 930, 136, 654, 656, 657, 655,
	43, 269, 663, 654, 656, 657, 655, 492, 931, 301,
	819, 271, 895, 735, 327, 310, 707, 4, 315, 319,
	560, 240, 322, 651, 116, 152, 896, 653, 652, 125,
	304, 120, 178, 919, 140, 514, 356, 337, 851, 508,
	504, 448, 203, 120, 584, 177, 179, 180, 178, 584,
	227, 191, 324, 509, 505, 630, 38, 355, 733, 661,
	662, 663, 654, 656, 657, 655, 631, 791, 161, 664,
	665, 357, 309, 726, 449, 120, 616, 583, 421, 231,
	231, 497, 266, 120, 227, 358, 270, 617, 584, 119,
	176, 175, 558, 541, 554, 120, 974, 240, 228, 158,
	125, 229, 120, 559, 272, 555, 651, 103, 677, 659,
	653, 652, 227, 269, 473, 384, 350, 232, 200, 904,
	423, 902, 859, 271, 174, 177, 179, 180, 178, 927,
	668, 667, 658, 660, 671, 672, 669, 670, 673, 675,
	674, 676, 661, 662, 663, 654, 656, 657, 655, 853,
	449, 227, 331, 119, 334, 789, 353, 446, 743, 454,
	348, 311, 230, 230, 132, 119, 456, 300, 637, 228,
	354, 629, 229, 299, 349, 312, 451, 628, 133, 622,
	621, 582, 227, 593, 231, 609, 432, 264, 232, 747,
	449, 608, 394, 446, 447, 391, 595, 119, 446, 594,
	593, 471, 444, 130, 746, 119, 602, 507, 240, 438,
	488, 511, 975, 465, 293, 519, 272, 302, 231, 469,
	292, 159, 286, 502, 119, 477, 478, 280, 253, 38,
	447, 191, 493, 252, 489, 447, 434, 435, 490, 495,
	470, 911, 1016, 496, 539, 928, 231, 519, 6, 503,
	5, 738, 999, 948, 913, 482, 883, 500, 880, 868,
	823, 812, 435, 434, 434, 397, 435, 230, 591, 725,
	176, 175, 544, 691, 461, 463, 294, 437, 632, 623,
	619, 428, 125, 546, 120, 231, 426, 306, 1011, 570,
	978, 570, 575, 570, 578, 890, 227, 484, 138, 264,
	296, 230, 181, 182, 174, 177, 179, 180, 178, 822,
	125, 816, 120, 586, 38, 680, 231, 296, 585, 446,
	446, 807, 806, 874, 4, 562, 549, 398, 537, 230,
	535, 538, 342, 550, 294, 343, 488, 287, 277, 274,
	273, 249, 610, 221, 613, 195, 194, 446, 193, 143,
	446, 228, 446, 121, 229, 607, 447, 447, 134, 715,
	489, 495, 701, 702, 490, 496, 997, 1008, 230, 1007,
	232, 308, 987, 307, 982, 981, 979, 227, 398, 228,
	701, 702, 229, 614, 447, 921, 910, 447, 878, 447,
	809, 351, 612, 1017, 803, 444, 315, 615, 232, 230,
	319, 802, 635, 636, 579, 519, 119, 796, 639, 640,
	710, 697, 679, 545, 519, 543, 540, 499, 396, 346,
	38, 519, 519, 519, 519, 519, 155, 903, 714, 603,
	231, 633, 529, 258, 119, 973, 643, 915, 436, 6,
	570, 5, 889, 698, 646, 888, 227, 227, 227, 433,
	808, 519, 886, 570, 708, 716, 730, 38, 38, 576,
	305, 90, 727, 729, 529, 570, 578, 724, 700, 196,
	223, 224, 703, 266, 705, 227, 227, 270, 828, 872,
	711, 845, 846, 847, 844, 843, 842, 737, 446, 800,
	801, 650, 693, 694, 256, 731, 740, 259, 260, 502,
	294, 728, 678, 736, 269, 125, 734, 739, 453, 422,
	124, 231, 985, 230, 271, 4, 227, 125, 227, 125,
	516, 742, 648, 969, 741, 447, 645, 125, 685, 457,
	513, 452, 510, 444, 752, 425, 424, 721, 466, 125,
	506, 748, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 787,
	754, 519, 755, 718, 756, 294, 125, 124, 303, 294,
	231, 231, 231, 294, 125, 294, 281, 285, 571, 320,
	298, 572, 571, 294, 230, 572, 788, 790, 519, 316,
	125, 797, 120, 127, 128, 227, 125, 272, 120, 231,
	231, 131, 684, 321, 123, 467, 814, 570, 461, 829,
	862, 258, 529, 574, 570, 848, 436, 817, 61, 593,
	455, 529, 484, 258, 567, 568, 826, 258, 529, 529,
	529, 529, 529, 849, 830, 740, 262, 451, 131, 854,
	231, 856, 231, 571, 402, 607, 572, 258, 400, 207,
	206, 793, 436, 230, 230, 230, 294, 983, 529, 228,
	284, 852, 229, 825, 821, 267, 519, 1005, 268, 857,
	858, 53, 519, 519, 811, 259, 260, 723, 232, 44,
	264, 238, 230, 230, 232, 984, 467, 259, 260, 557,
	162, 259, 260, 794, 336, 227, 875, 227, 873, 798,
	519, 879, 881, 570, 887, 818, 876, 1015, 882, 989,
	468, 259, 260, 955, 119, 44, 953, 923, 618, 894,
	119, 570, 901, 230, 898, 230, 225, 233, 38, 231,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 212, 891, 548, 227, 897, 446, 519, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 517, 920, 529, 597,
	906, 599, 598, 934, 447, 1001, 885, 38, 996, 258,
	519, 877, 444, 958, 283, 810, 701, 702, 933, 907,
	899, 1, 871, 125, 258, 529, 758, 757, 517, 282,
	519, 720, 230, 519, 649, 647, 519, 644, 570, 960,
	570, 968, 38, 600, 38, 704, 701, 702, 512, 231,
	479, 231, 38, 393, 38, 38, 323, 202, 519, 201,
	942, 198, 258, 570, 968, 135, 980, 255, 333, 827,
	936, 38, 284, 259, 260, 38, 38, 519, 1006, 570,
	912, 341, 914, 745, 570, 993, 751, 861, 259, 260,
	443, 995, 922, 991, 924, 925, 606, 587, 588, 231,
	38, 570, 1009, 529, 589, 917, 1010, 682, 917, 529,
	529, 254, 570, 1013, 837, 992, 954, 941, 38, 956,
	962, 945, 959, 961, 946, 900, 259, 260, 481, 401,
	893, 836, 230, 833, 230, 573, 651, 529, 943, 659,
	653, 652, 38, 564, 977, 1003, 1002, 839, 38, 722,
	970, 392, 387, 840, 163, 339, 838, 695, 536, 926,
	289, 458, 160, 990, 671, 672, 669, 670, 673, 675,
	674, 676, 661, 662, 663, 654, 656, 657, 655, 988,
	156, 317, 230, 313, 126, 529, 517, 526, 605, 994,
	967, 966, 965, 964, 835, 517, 834, 832, 399, 39,
	566, 14, 517, 517, 517, 517, 517, 845, 846, 847,
	844, 843, 842, 13, 1012, 820, 191, 717, 799, 692,
	10, 248, 74, 1018, 75, 115, 265, 529, 63, 892,
	88, 596, 517, 89, 518, 100, 168, 170, 169, 191,
	73, 11, 325, 99, 98, 78, 556, 529, 118, 524,
	529, 3, 40, 529, 683, 176, 175, 0, 0, 0,
	0, 686, 687, 688, 689, 690, 0, 0, 0, 0,
	807, 806, 0, 0, 0, 529, 192, 172, 176, 175,
	0, 0, 0, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 529, 0, 0, 0, 166, 167,
	171, 173, 185, 186, 183, 184, 187, 188, 189, 190,
	181, 182, 174, 177, 179, 180, 178, 0, 0, 0,
	0, 0, 0, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	0, 0, 517, 208, 209, 210, 211, 213, 214, 215,
	216, 217, 218, 219, 220, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 664, 665, 0, 0, 517,
	0, 0, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 867,
	0, 683, 651, 0, 677, 659, 653, 652, 208, 209,
	210, 211, 213, 214, 215, 216, 217, 218, 219, 220,
	212, 0, 0, 0, 0, 0, 668, 667, 658, 660,
	671, 672, 669, 670, 673, 675, 674, 676, 661, 662,
	663, 654, 656, 657, 655, 347, 0, 517, 0, 0,
	0, 0, 0, 517, 517, 0, 0, 0, 0, 0,
	208, 209, 210, 211, 213, 214, 215, 216, 217, 218,
	219, 220, 212, 30, 0, 0, 0, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 150, 154, 0,
	0, 0, 164, 0, 0, 0, 866, 0, 0, 0,
	197, 0, 869, 870, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 517,
	234, 235, 236, 237, 0, 0, 239, 50, 241, 242,
	243, 244, 245, 246, 247, 0, 251, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 275, 276, 0, 278,
	279, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	290, 517, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 908, 0,
	0, 517, 226, 226, 517, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 340, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 0, 517, 665,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 385, 0, 154, 0,
	0, 0, 0, 0, 0, 651, 0, 677, 659, 653,
	652, 0, 404, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 0, 0, 352, 0, 668,
	667, 658, 660, 671, 672, 669, 670, 673, 675, 674,
	676, 661, 662, 663, 654, 656, 657, 655, 0, 0,
	0, 0, 0, 239, 0, 0, 431, 431, 0, 0,
	0, 389, 390, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 909, 154, 154, 0,
	0, 464, 0, 651, 431, 0, 659, 653, 652, 420,
	431, 290, 0, 0, 0, 0, 431, 431, 0, 0,
	154, 0, 0, 431, 494, 666, 664, 665, 0, 498,
	660, 671, 672, 669, 670, 673, 675, 674, 676, 661,
	662, 663, 654, 656, 657, 655, 0, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 462, 651, 0, 677, 659, 653, 652, 0,
	0, 0, 0, 0, 0, 547, 666, 664, 665, 476,
	0, 0, 551, 0, 485, 0, 0, 668, 667, 658,
	660, 671, 672, 669, 670, 673, 675, 674, 676, 661,
	662, 663, 654, 656, 657, 655, 0, 0, 0, 0,
	553, 0, 0, 0, 651, 865, 677, 659, 653, 652,
	0, 0, 839, 0, 0, 0, 0, 154, 840, 0,
	0, 838, 0, 0, 0, 0, 0, 0, 668, 667,
	658, 660, 671, 672, 669, 670, 673, 675, 674, 676,
	661, 662, 663, 654, 656, 657, 655, 0, 0, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 845, 846, 847, 844, 843, 842, 0, 0,
	0, 580, 860, 581, 0, 0, 0, 624, 626, 192,
	172, 176, 175, 0, 831, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 168, 170, 169, 191, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 855, 192, 172, 176, 175, 0,
	0, 0, 0, 0, 340, 699, 0, 0, 651, 0,
	0, 0, 653, 652, 476, 0, 709, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 671, 672, 669, 670,
	673, 675, 674, 676, 661, 662, 663, 654, 656, 657,
	655, 0, 0, 0, 0, 431, 666, 664, 665, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 431, 749, 0, 0, 0, 792, 0, 0,
	0, 154, 0, 389, 713, 713, 0, 0, 0, 0,
	0, 0, 0, 795, 651, 154, 677, 659, 653, 652,
	0, 0, 0, 0, 0, 0, 666, 664, 665, 0,
	0, 0, 420, 420, 0, 0, 0, 0, 668, 667,
	658, 660, 671, 672, 669, 670, 673, 675, 674, 676,
	661, 662, 663, 654, 656, 657, 655, 0, 0, 0,
	0, 0, 0, 0, 651, 460, 677, 659, 653, 652,
	0, 0, 0, 476, 0, 476, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 804, 0, 0, 668, 667,
	658, 660, 671, 672, 669, 670, 673, 675, 674, 676,
	661, 662, 663, 654, 656, 657, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 850,
	0, 0, 431, 0, 0, 0, 0, 0, 0, 0,
	431, 431, 0, 0, 0, 0, 0, 863, 0, 0,
	0, 0, 0, 0, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 815, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 15, 24,
	35, 0, 0, 36, 9, 0, 26, 340, 31, 80,
	81, 7, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 8,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	642, 34, 713, 62, 420, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 15,
	24, 35, 476, 0, 36, 9, 0, 26, 0, 31,
	80, 81, 7, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	8, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 501, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	15, 24, 35, 0, 0, 36, 9, 0, 26, 0,
	31, 80, 81, 7, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 8, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 0, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 330, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 1019, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 330, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 1014, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 330, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 998, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	986, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 0, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 972, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 330, 45,
	47, 49, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 46, 48, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 0, 34, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 330,
	45, 47, 49, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 46, 48, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 971, 34,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	330, 45, 47, 49, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 46, 48,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 950,
	34, 0, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 330, 45, 47, 49, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 46,
	48, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	949, 34, 0, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 330, 45, 47, 49, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	46, 48, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 947, 34, 0, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	884, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 330, 45, 47, 49, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 46, 48, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	17, 104, 105, 12, 87, 120, 0, 29, 0, 0,
	0, 94, 28, 19, 18, 696, 20, 0, 32, 0,
	33, 0, 0, 21, 0, 0, 0, 22, 23, 37,
	44, 0, 24, 35, 0, 0, 36, 0, 0, 26,
	0, 31, 80, 81, 330, 45, 47, 49, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	41, 27, 46, 48, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 16, 0, 34, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 17, 104, 105, 12, 87, 120, 0, 29, 0,
	0, 0, 94, 28, 19, 18, 0, 20, 0, 32,
	0, 33, 0, 0, 21, 0, 0, 0, 22, 23,
	37, 44, 0, 24, 35, 0, 0, 36, 0, 0,
	26, 0, 31, 80, 81, 330, 45, 47, 49, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 41, 27, 46, 48, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 16, 561, 34, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 17, 104, 105, 12, 87, 120, 0, 29,
	0, 0, 0, 94, 28, 19, 18, 0, 20, 0,
	32, 0, 33, 0, 0, 21, 0, 0, 0, 22,
	23, 37, 44, 0, 24, 35, 0, 0, 36, 0,
	0, 26, 0, 31, 80, 81, 330, 45, 47, 49,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 41, 27, 46, 48, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 16, 326, 34, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 17, 104, 105, 12, 87, 120, 0,
	29, 0, 0, 0, 94, 28, 19, 18, 0, 20,
	0, 32, 0, 33, 0, 0, 21, 0, 0, 0,
	22, 23, 37, 44, 0, 24, 35, 0, 0, 36,
	0, 0, 26, 0, 31, 80, 81, 330, 45, 47,
	49, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 41, 27, 46, 48, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 16, 0, 34, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 17, 104, 105, 12, 87, 120,
	0, 29, 0, 0, 0, 94, 28, 19, 18, 0,
	20, 0, 32, 0, 33, 0, 0, 21, 0, 0,
	0, 22, 23, 37, 44, 0, 24, 35, 0, 0,
	36, 0, 0, 26, 0, 31, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 41, 27, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 16, 0, 34, 944,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 17, 104, 105, 12, 87,
	120, 0, 29, 0, 0, 0, 94, 28, 19, 18,
	0, 20, 0, 32, 0, 33, 0, 0, 21, 0,
	0, 0, 22, 23, 37, 44, 0, 24, 35, 0,
	0, 36, 0, 0, 26, 0, 31, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 41, 27, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 16, 0, 34,
	918, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 17, 104, 105, 12,
	87, 120, 0, 29, 0, 0, 0, 94, 28, 19,
	18, 0, 20, 0, 32, 0, 33, 0, 0, 21,
	0, 0, 0, 22, 23, 37, 44, 0, 24, 35,
	0, 0, 36, 0, 0, 26, 0, 31, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 41, 27, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 16, 0,
	34, 719, 62, 0, 96, 0, 0, 0, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 17, 104, 105,
	12, 87, 120, 0, 29, 0, 0, 0, 94, 28,
	19, 18, 0, 20, 0, 32, 0, 33, 0, 0,
	21, 0, 0, 0, 22, 23, 37, 44, 0, 24,
	35, 0, 0, 36, 0, 0, 26, 0, 31, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 0, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 27, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 16,
	0, 34, 335, 62, 0, 96, 0, 0, 0, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 17, 104,
	105, 12, 87, 120, 0, 29, 0, 0, 0, 94,
	28, 19, 18, 0, 20, 0, 32, 0, 33, 0,
	0, 21, 0, 0, 0, 22, 23, 37, 44, 0,
	24, 35, 0, 0, 36, 0, 0, 26, 0, 31,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 41, 27,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	16, 0, 34, 332, 62, 0, 96, 0, 0, 0,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 17,
	104, 105, 12, 87, 120, 0, 29, 0, 0, 0,
	94, 28, 19, 18, 0, 20, 0, 32, 0, 33,
	0, 0, 21, 0, 0, 0, 22, 23, 37, 44,
	0, 24, 35, 0, 0, 36, 0, 0, 26, 0,
	31, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 753, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	27, 168, 170, 169, 191, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 16, 0, 34, 0, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 0, 0, 0,
	0, 192, 172, 176, 175, 0, 0, 0, 0, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 750, 0, 0, 0, 0, 0, 0, 192,
	172, 176, 175, 0, 0, 0, 0, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	706, 0, 0, 0, 0, 0, 0, 192, 172, 176,
	175, 0, 0, 0, 0, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 641, 0,
	0, 0, 0, 0, 0, 192, 172, 176, 175, 0,
	0, 0, 0, 168, 170, 169, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 638, 0, 0, 0,
	0, 0, 0, 192, 172, 176, 175, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 620, 0, 0, 192, 172, 176,
	175, 0, 0, 0, 0, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 601, 0,
	0, 0, 0, 0, 0, 192, 172, 176, 175, 0,
	0, 168, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 552, 0, 0, 0,
	0, 192, 172, 176, 175, 168, 170, 169, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 0, 0, 0, 192, 172, 176, 175, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 427, 0, 0, 192,
	172, 176, 175, 168, 170, 169, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	0, 0, 0, 192, 172, 176, 175, 0, 0, 0,
	168, 170, 169, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 167, 171, 173, 185,
	186, 183, 184, 187, 188, 189, 190, 181, 182, 174,
	177, 179, 180, 178, 395, 0, 0, 0, 0, 0,
	192, 172, 176, 175, 0, 0, 0, 168, 170, 169,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 167, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 345, 0, 0, 0, 0, 0, 192, 172, 176,
	175, 0, 0, 0, 168, 170, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	167, 171, 173, 185, 186, 183, 184, 187, 188, 189,
	190, 181, 182, 174, 177, 179, 180, 178, 344, 0,
	0, 0, 0, 0, 192, 172, 176, 175, 0, 0,
	0, 168, 170, 169, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 165, 0, 0, 0, 0,
	0, 192, 172, 176, 175, 666, 664, 665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 167, 171, 173, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 0, 651, 0, 677, 659, 653, 652, 168,
	170, 169, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 668, 667, 658,
	660, 671, 672, 669, 670, 673, 675, 674, 676, 661,
	662, 663, 654, 656, 657, 655, 0, 0, 0, 192,
	172, 176, 175, 170, 169, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 167, 171, 173, 185, 186, 183, 184, 187,
	188, 189, 190, 181, 182, 174, 177, 179, 180, 178,
	0, 0, 192, 172, 176, 175, 169, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 0, 192, 172, 176, 175, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 167, 171, 173,
	185, 186, 183, 184, 187, 188, 189, 190, 181, 182,
	174, 177, 179, 180, 178, 192, 172, 176, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 167, 171,
	173, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 651, 0, 677, 659,
	653, 652, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	668, 667, 658, 660, 671, 672, 669, 670, 673, 675,
	674, 676, 661, 662, 663, 654, 656, 657, 655, 651,
	0, 0, 659, 653, 652, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 667, 658, 660, 671, 672, 669,
	670, 673, 675, 674, 676, 661, 662, 663, 654, 656,
	657, 655, 0, 172, 176, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	0, 659, 653, 652, 166, 167, 171, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 667, 658, 660, 671, 672, 669, 670,
	673, 675, 674, 676, 661, 662, 663, 654, 656, 657,
	655, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	176, 175, 0, 0, 0, 0, 82, 83, 71, 0,
	104, 105, 125, 87, 120, 0, 0, 0, 0, 0,
	94, 167, 171, 173, 185, 186, 183, 184, 187, 188,
	189, 190, 181, 182, 174, 177, 179, 180, 178, 44,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 487, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 41,
	148, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 651, 91,
	76, 659, 653, 652, 0, 62, 480, 96, 0, 0,
	486, 57, 56, 58, 59, 72, 119, 0, 0, 0,
	0, 0, 0, 0, 658, 660, 671, 672, 669, 670,
	673, 675, 674, 676, 661, 662, 663, 654, 656, 657,
	655, 82, 83, 71, 0, 104, 105, 125, 87, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 191, 0, 0, 142, 112, 108, 102,
	487, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 147, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 172, 176, 175, 91, 76, 0, 0, 0, 0,
	62, 0, 96, 0, 0, 486, 57, 56, 58, 59,
	72, 119, 0, 0, 171, 173, 185, 186, 183, 184,
	187, 188, 189, 190, 181, 182, 174, 177, 179, 180,
	178, 82, 83, 71, 0, 104, 105, 125, 87, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 191, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 147, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 0,
	62, 0, 96, 176, 175, 864, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 185, 186, 183,
	184, 187, 188, 189, 190, 181, 182, 174, 177, 179,
	180, 178, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 0, 0, 0, 77, 147, 148, 0, 0, 0,
	0, 0, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 627, 57, 56, 58,
	59, 72, 119, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 191, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 147, 148, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 172, 176, 175, 91, 76, 0, 0,
	0, 0, 62, 0, 96, 0, 0, 625, 57, 56,
	58, 59, 72, 119, 0, 0, 0, 173, 185, 186,
	183, 184, 187, 188, 189, 190, 181, 182, 174, 177,
	179, 180, 178, 82, 83, 71, 0, 104, 105, 125,
	87, 120, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 95,
	0, 93, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 92, 0, 0, 0, 0, 142, 112,
	108, 102, 0, 84, 85, 86, 0, 0, 0, 0,
	79, 52, 0, 0, 0, 77, 147, 148, 0, 0,
	0, 0, 0, 54, 55, 0, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 91, 76, 0, 0,
	0, 0, 62, 0, 96, 0, 0, 291, 57, 56,
	58, 59, 72, 119, 82, 83, 71, 0, 104, 105,
	125, 87, 120, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	95, 0, 93, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 142,
	112, 108, 102, 0, 84, 85, 86, 0, 191, 0,
	0, 79, 52, 0, 0, 0, 77, 41, 148, 0,
	0, 0, 0, 0, 54, 55, 0, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 91, 76, 0,
	0, 0, 0, 62, 429, 96, 172, 176, 175, 57,
	56, 58, 59, 72, 119, 82, 83, 71, 0, 104,
	105, 125, 87, 120, 0, 0, 0, 0, 0, 94,
	0, 185, 186, 183, 184, 187, 188, 189, 190, 181,
	182, 174, 177, 179, 180, 178, 0, 0, 44, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 95, 0, 93, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 0, 0,
	142, 112, 108, 102, 0, 84, 85, 86, 0, 0,
	0, 0, 79, 52, 0, 0, 0, 77, 147, 148,
	0, 0, 0, 0, 0, 54, 55, 0, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 91, 76,
	0, 0, 0, 0, 62, 0, 96, 0, 0, 405,
	57, 56, 58, 59, 72, 119, 82, 83, 71, 0,
	104, 105, 125, 87, 120, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 95, 0, 93, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 142, 112, 108, 102, 0, 84, 85, 86, 0,
	0, 0, 0, 79, 52, 0, 0, 0, 77, 147,
	148, 0, 0, 0, 0, 0, 54, 55, 0, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 91,
	76, 0, 0, 0, 386, 62, 0, 96, 0, 0,
	0, 57, 56, 58, 59, 72, 119, 82, 83, 71,
	0, 104, 105, 125, 87, 120, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 95, 0, 93, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 142, 112, 108, 102, 0, 84, 85, 86,
	0, 0, 0, 0, 79, 52, 0, 0, 0, 77,
	147, 148, 0, 0, 0, 0, 0, 54, 55, 0,
	64, 65, 66, 67, 68, 69, 70, 0, 0, 0,
	91, 76, 0, 0, 151, 0, 62, 0, 96, 0,
	0, 0, 57, 56, 58, 59, 72, 119, 82, 83,
	71, 0, 104, 105, 125, 87, 120, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 44, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 95, 0, 93, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 142, 112, 108, 102, 0, 84, 85,
	86, 0, 0, 0, 0, 79, 52, 0, 0, 0,
	77, 147, 148, 0, 0, 0, 0, 0, 54, 55,
	0, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 91, 76, 0, 0, 149, 0, 62, 0, 96,
	0, 0, 0, 57, 56, 58, 59, 72, 119, 82,
	83, 71, 0, 104, 105, 125, 87, 120, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 95, 0, 93, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 142, 112, 108, 102, 0, 84,
	85, 86, 0, 0, 0, 0, 79, 52, 0, 0,
	0, 77, 147, 148, 0, 0, 0, 0, 0, 54,
	55, 0, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 91, 76, 0, 0, 145, 0, 62, 0,
	96, 0, 0, 0, 57, 56, 58, 59, 72, 119,
	82, 83, 71, 0, 104, 105, 125, 87, 120, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 95, 0, 93, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 142, 112, 108, 102, 0,
	84, 85, 86, 0, 0, 0, 0, 79, 52, 0,
	0, 0, 77, 147, 148, 0, 0, 0, 0, 0,
	54, 55, 0, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 91, 76, 0, 0, 0, 0, 62,
	0, 96, 0, 0, 0, 57, 56, 58, 59, 72,
	119, 82, 83, 71, 0, 104, 105, 125, 440, 120,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 95, 0, 93,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 0, 142, 112, 108, 102,
	0, 84, 85, 86, 0, 0, 0, 0, 79, 52,
	0, 0, 0, 77, 147, 148, 0, 0, 0, 0,
	0, 54, 55, 0, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 91, 76, 0, 0, 0, 0,
	62, 0, 96, 0, 0, 0, 57, 56, 58, 59,
	72, 119, 82, 83, 71, 0, 104, 105, 125, 87,
	120, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 95, 0,
	93, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 142, 112, 108,
	102, 0, 84, 85, 86, 0, 0, 0, 0, 79,
	52, 104, 105, 125, 77, 41, 148, 0, 0, 0,
	0, 527, 54, 55, 0, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 91, 76, 0, 0, 0,
	0, 62, 0, 96, 0, 0, 0, 57, 56, 58,
	59, 72, 119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 525, 109, 110, 111, 106,
	107, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 0, 520, 112, 108, 521, 104, 105, 125, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 534, 0, 523, 0,
	0, 0, 533, 532, 530, 531, 0, 0, 522, 0,
	525, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 0, 520, 112, 108,
	521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 523, 0, 0, 0, 533, 532, 530,
	531,
}
var yyPact = [...]int{

	-1000, -1000, 2402, -1000, -1000, -1000, -1000, 340, 605, 676,
	153, -1000, 346, -1000, -1000, 955, -1000, 285, 285, 5022,
	336, 285, 7755, 7624, 7493, 415, 197, 798, 7886, -1000,
	5684, 335, 333, 332, -1000, 460, 7886, 951, 100, 949,
	947, 7886, -1000, -1000, -1000, -1000, 718, -1000, 717, -1000,
	1182, 330, 7886, 476, 700, 700, 7886, 7886, 7886, 7886,
	-1000, -1000, 8148, -1000, 7886, 7886, 7886, 7886, 7886, 7886,
	7886, 328, 7886, -1000, 218, 213, 950, 7886, 699, 706,
	327, 326, 7886, 7886, 325, 7886, 7886, -1000, 212, -1000,
	-1000, 912, 897, -1000, 207, 324, 6969, -1000, 205, 199,
	-1000, 304, 913, 622, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 158, 193, -1000, 610, 287, -1000, 451,
	-1000, 273, 362, -1000, 913, -1000, 150, 627, 617, -1000,
	694, 913, -1000, 946, -1000, 26, 4105, 4891, 8148, 4760,
	793, 100, 538, 7886, 323, -1000, 5637, -1000, 762, -1000,
	5590, -1000, 408, 1234, 5772, -1000, 149, -1000, -1000, 382,
	145, 100, 10, 60, 5772, -1000, 7886, 7886, 7886, 7886,
	7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886,
	7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886,
	7886, 706, 7362, 700, 7886, 943, -1000, 5543, 407, 365,
	-1000, 713, 709, -1000, 1182, 5496, -1000, -1000, 7231, 7886,
	7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886, 7886,
	7886, 129, -1000, -1000, -1000, -1000, -1000, 304, 537, 913,
	568, 567, -1000, -1000, -120, -120, -25, -120, 272, 5452,
	267, -120, -120, -120, -120, -120, -120, -120, -1000, 7100,
	-1000, -120, 7886, 7886, 441, 735, 719, -1000, 262, 8017,
	700, 5898, 141, 287, 563, -1000, 528, 536, 913, 683,
	158, 193, 561, 7886, 7886, 5772, 5772, 7886, 5772, 5772,
	7886, 531, 735, 731, -1000, 755, 7886, 6969, 185, 89,
	5408, 700, 7886, 7886, 940, -1000, 6252, 304, 65, 7886,
	7886, 158, 451, 181, -1000, 7886, 406, -1000, -1000, 2271,
	304, -1000, 639, 29, -1000, 621, 913, 28, -1000, 613,
	913, 938, 611, 9, 8308, -1000, -1000, -1000, -1000, -1000,
	317, -1000, -1000, -1000, -1000, -1000, 285, 314, 405, 68,
	5772, -1000, 404, 402, -1000, -1000, -1000, -1000, -1000, 197,
	-1000, 7886, -1000, -1000, 852, 313, 8308, -1000, 7886, 6121,
	6393, 5815, 5898, 5857, 6805, 6554, 7098, -9, -9, -9,
	-25, -120, -25, -25, 71, 71, 1026, 1026, 1026, 1026,
	251, 251, 251, 251, -1000, 5364, 7886, 80, -1000, -1000,
	1117, 780, 78, -6, 3974, -1000, -1000, 312, 684, 677,
	619, 450, 619, 7886, 5898, 200, 5898, 5898, 5898, 5898,
	5898, 5898, 5898, 5898, 5898, 5898, 5898, 5898, 63, -1000,
	-1000, 305, 913, 304, 141, 141, 253, -1000, -1000, -1000,
	183, 5772, 180, -1000, -1000, -1000, -1000, 889, 933, 5318,
	191, 419, 287, 176, -1000, -1000, 158, 193, -1000, 7886,
	-1000, -1000, 173, 913, 528, 141, 158, 173, 62, -1000,
	1182, -1000, 714, 266, 5270, 164, -1000, -1000, -1000, 163,
	265, -1000, -1000, 6819, 6688, -1000, -1000, 161, 155, -1000,
	-1000, 41, 264, -1000, -1000, 1182, 700, 7886, -1000, 287,
	287, -1000, -1000, 152, 5226, 287, 287, -1000, 5178, -1000,
	2140, -1000, -1000, -1000, -1000, 627, 927, 607, -1000, 617,
	925, 603, -1000, 924, 8308, -1000, 5728, -1000, -1000, 528,
	530, 913, 302, 8308, -1000, -1000, -1000, -1000, 705, 560,
	8308, 8308, 8308, 8308, 8308, 259, 509, 4236, 3843, 400,
	7886, 7886, 458, -1000, 914, -1000, -1000, 5130, -10, 684,
	-1000, 5772, 7886, 6025, 399, 700, 410, 410, 4629, 921,
	8308, 756, 684, 255, 48, -1000, 100, -1000, -1000, -1000,
	528, 529, 913, 447, 619, -1000, -1000, 33, -1000, -1000,
	1182, -1000, 706, -13, 129, 129, 304, -1000, -1000, 236,
	682, 7886, -1000, 141, -1000, -1000, 142, -1000, -1000, -1000,
	-1000, -1000, 7886, -1000, -1000, 189, 174, -1000, 7886, 7886,
	158, 5082, -1000, 528, -1000, -1000, -1000, 7886, -1000, -1000,
	-1000, -1000, -1000, -1000, 5034, 700, 5772, 700, -1000, -1000,
	-1000, 6407, -1000, -1000, 5772, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 917, -1000, -1000, 916, -1000,
	-1000, 8308, 8308, 8308, 8308, 8308, 8308, 8308, 8308, 8308,
	8308, 8308, 8308, 8308, 8308, 8308, 8308, 8308, 8308, 8308,
	8308, 8308, 8308, 8308, 8308, 8308, 8308, 8233, 913, 528,
	8308, 139, 42, 1939, 650, 761, -65, -65, -58, -58,
	1889, 396, -1000, 285, 5022, 506, 390, -1000, 383, 5772,
	-1000, 7886, 310, 440, 379, 884, -1000, 8308, 247, 6025,
	-1000, -1000, 668, -1000, 700, 298, 668, -1000, -1000, -1000,
	-16, -1000, 742, 296, 246, 739, 684, 505, 913, 528,
	-1000, 33, 1744, 619, 287, 7886, -1000, 24, 7886, 682,
	-1000, 133, 287, -1000, 1788, 682, 7886, 7886, 106, 1732,
	-1000, 673, -1000, 6557, -1000, -1000, -1000, -1000, -1000, 1649,
	-58, -58, -65, -65, -65, -65, 1538, 1803, 911, -51,
	-51, -58, 1460, 5941, 91, 6243, 6043, -66, -66, -66,
	-66, 8, 8, 8, 8, 8308, 1187, 528, 245, -1000,
	-1000, 8308, 8308, -1000, -1000, -1000, -1000, 5022, -1000, 494,
	285, 311, -1000, 7886, 1049, -1000, -1000, -1000, -1000, -1000,
	377, -1000, 739, 244, 410, -1000, 129, 242, 3712, 8308,
	-1000, 443, 619, 436, 433, 282, -1000, 851, -1000, 528,
	1009, -1000, -1000, 827, 1, -1000, 762, 493, -1000, 910,
	619, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	5898, -1000, 105, -1000, -1000, 417, -1000, 103, -56, -1000,
	-1000, -1000, 141, 5772, 700, -1000, 5984, 8308, -1000, 1598,
	5728, -1000, 375, 229, -1000, 240, -1000, 4236, -1000, 428,
	4498, -1000, 19, 4498, 374, -1000, -1000, 825, -1000, -1000,
	227, -53, -1000, -17, -54, -1000, 908, 100, -1000, -63,
	-50, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 5984, 8308,
	-1000, -1000, 4236, 4367, 4236, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3581, 239, 3450, 3319, -48, -1000, 824, 8308,
	-1000, 821, 8308, -64, 903, 8308, -1000, 619, -1000, 623,
	5728, 4236, -1000, -1000, -1000, 3188, 3057, -1000, 426, -1000,
	-1000, -1000, 194, -1000, -1000, -75, -1000, 8308, 277, -1000,
	-1000, 366, 623, -1000, 364, 363, 732, 776, 544, -1000,
	2926, -1000, 361, -1000, -1000, 817, 8308, -1000, 684, -1000,
	-1000, -1000, -1000, 619, 493, 898, 355, -1000, 2795, -1000,
	-1000, 238, -47, -1000, 895, -1000, -1000, -1000, 746, 358,
	619, -1000, -1000, 746, -1000, 275, -1000, -1000, -1000, -1000,
	-1000, 619, 2664, 815, -1000, 228, 384, -1000, 2533, -1000,
}
var yyPgo = [...]int{

	0, 29, 1152, 1151, 46, 40, 44, 571, 1149, 1148,
	4, 217, 134, 42, 1383, 110, 66, 54, 791, 1447,
	1145, 31, 1144, 1143, 1142, 124, 1141, 43, 86, 1140,
	1135, 1134, 1133, 90, 1131, 1130, 26, 1128, 28, 45,
	49, 1126, 738, 33, 1125, 1, 1124, 1122, 17, 1121,
	68, 50, 48, 1120, 1119, 1118, 34, 1117, 1115, 2,
	1113, 1101, 1100, 19, 1099, 1098, 1097, 1096, 1094, 52,
	3, 1093, 1092, 1091, 1090, 1089, 6, 1088, 630, 1087,
	58, 0, 1084, 1083, 1081, 105, 1080, 1062, 604, 1061,
	1060, 62, 11, 1059, 8, 1058, 1057, 1055, 12, 38,
	1054, 1052, 1051, 1049, 1046, 1045, 14, 1043, 23, 1035,
	1033, 1031, 1030, 1029, 30, 1028, 1025, 1023, 1020, 1015,
	1014, 1011, 25, 1007, 1004, 998, 27, 997, 15, 16,
	996, 37, 990, 987, 986, 983, 41, 7, 20, 18,
	22, 981, 978, 970, 5, 969, 968, 960, 13, 921,
	21, 24,
}
var yyR1 = [...]int{

	0, 149, 80, 80, 81, 81, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 82, 82, 4,
	4, 4, 4, 83, 83, 5, 5, 5, 5, 84,
	84, 6, 6, 6, 6, 53, 53, 85, 85, 24,
	24, 24, 24, 25, 25, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 103, 103, 58, 58, 104, 104, 105,
	105, 59, 101, 101, 56, 51, 52, 144, 144, 145,
	145, 60, 61, 61, 64, 64, 64, 64, 65, 65,
	2, 113, 113, 109, 109, 114, 114, 138, 138, 137,
	137, 137, 147, 147, 148, 148, 57, 57, 102, 102,
	141, 141, 141, 141, 99, 99, 99, 150, 150, 146,
	146, 95, 95, 96, 96, 54, 54, 55, 55, 106,
	106, 107, 107, 63, 63, 62, 62, 62, 62, 140,
	140, 140, 115, 115, 69, 69, 69, 69, 86, 86,
	27, 27, 27, 87, 87, 87, 87, 108, 108, 66,
	66, 66, 66, 68, 116, 116, 143, 143, 117, 117,
	118, 118, 70, 70, 71, 119, 119, 74, 74, 73,
	72, 72, 75, 75, 142, 142, 110, 110, 111, 111,
	120, 120, 76, 76, 76, 76, 76, 76, 112, 112,
	112, 112, 67, 67, 100, 100, 98, 98, 97, 97,
	126, 126, 124, 124, 125, 125, 125, 127, 127, 42,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 50, 50, 50, 50, 47, 47,
	47, 47, 46, 46, 1, 94, 94, 93, 93, 93,
	93, 23, 23, 23, 23, 23, 23, 23, 23, 11,
	11, 11, 11, 45, 45, 45, 43, 43, 41, 41,
	134, 134, 133, 49, 49, 49, 121, 121, 121, 139,
	139, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 28, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 35, 35,
	35, 35, 29, 29, 29, 29, 29, 29, 29, 122,
	122, 151, 151, 123, 123, 123, 123, 14, 14, 48,
	48, 16, 17, 18, 19, 19, 135, 135, 128, 130,
	130, 77, 129, 129, 129, 40, 40, 44, 44, 12,
	22, 22, 20, 20, 20, 21, 21, 21, 10, 10,
	10, 9, 9, 13, 13, 131, 131, 132, 132, 132,
	39, 39, 136, 136, 92, 92, 38, 38, 38, 91,
	91, 90, 90, 90, 90, 90, 90, 90, 90, 88,
	88, 88, 88, 33, 33, 33, 33, 33, 33, 34,
	34, 34, 37, 37, 37, 37, 37, 37, 37, 37,
	89, 89, 36, 36, 30, 30, 31, 32,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 4,
	3, 5, 4, 3, 4, 4, 2, 3, 1, 1,
	3, 2, 4, 3, 1, 1, 3, 2, 4, 3,
	1, 1, 3, 2, 4, 5, 4, 2, 0, 1,
	1, 1, 4, 1, 2, 3, 5, 8, 3, 5,
	9, 3, 2, 3, 2, 3, 2, 3, 3, 2,
	3, 3, 3, 1, 2, 5, 8, 8, 5, 1,
	6, 3, 3, 0, 9, 0, 4, 1, 0, 1,
	2, 8, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 9, 7, 6, 1, 2, 1, 2, 0, 2,
	1, 0, 2, 0, 2, 1, 3, 0, 2, 1,
	2, 4, 1, 4, 1, 4, 1, 4, 3, 5,
	3, 4, 4, 5, 0, 5, 4, 1, 1, 1,
	4, 0, 4, 0, 5, 0, 2, 0, 3, 1,
	0, 1, 3, 4, 6, 0, 1, 1, 1, 2,
	3, 3, 1, 3, 1, 1, 2, 2, 3, 1,
	1, 2, 4, 3, 5, 1, 3, 2, 0, 3,
	2, 1, 8, 3, 1, 3, 1, 3, 0, 1,
	1, 2, 2, 2, 3, 1, 3, 1, 1, 3,
	4, 3, 0, 1, 1, 3, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 3, 5, 4, 3, 1, 0, 1, 3, 1,
	2, 1, 4, 3, 2, 1, 1, 0, 1, 3,
	6, 3, 4, 6, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 4, 5, 4, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 9, 10, 2, 2, 4, 4, 4, 4,
	4, 4, 4, 3, 1, 0, 4, 3, 4, 1,
	2, 2, 4, 3, 4, 4, 4, 4, 2, 1,
	1, 3, 2, 1, 3, 2, 1, 1, 4, 1,
	2, 0, 2, 0, 2, 1, 0, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 2, 3, 1, 1, 1, 1, 3, 2,
	4, 3, 1, 1, 1, 4, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 2, 2, 3, 1, 1,
	3, 2, 1, 1, 1, 1, 3, 3, 1, 0,
	2, 0, 1, 5, 3, 3, 1, 1, 1, 3,
	3, 1, 1, 1, 5, 1, 2, 0, 3, 4,
	4, 1, 1, 1, 0, 1, 2, 3, 3, 1,
	4, 4, 1, 1, 1, 1, 2, 1, 4, 4,
	1, 1, 4, 0, 1, 1, 1, 4, 4, 1,
	1, 3, 1, 2, 3, 1, 1, 4, 0, 0,
	2, 5, 3, 3, 1, 6, 4, 4, 2, 2,
	2, 1, 2, 1, 4, 3, 3, 6, 3, 1,
	1, 1, 4, 4, 4, 2, 2, 4, 2, 2,
	1, 3, 1, 1, 3, 3, 3, 3,
}
var yyChk = [...]int{

	-1000, -149, -80, -3, -25, -51, -52, 51, 79, 44,
	-53, -26, 10, -60, -61, 38, 119, 7, 21, 20,
	23, 30, 34, 35, 39, -50, 46, 98, 19, 14,
	-14, 48, 25, 27, 121, 40, 43, 36, -1, -64,
	-2, 97, -16, -15, 37, 52, 99, 53, 100, 54,
	-19, 59, 92, -18, 104, 105, 130, 129, 131, 132,
	-48, -42, 123, -37, 107, 108, 109, 110, 111, 112,
	113, 6, 133, -29, -47, -46, 118, 96, -20, 91,
	49, 50, 4, 5, 84, 85, 86, 11, -35, -32,
	-7, 117, 74, 62, 18, 60, 125, -21, -22, -23,
	-30, -81, 82, -11, 8, 9, 66, 67, 81, 63,
	64, 65, 80, -10, -136, -44, -12, -40, -9, 134,
	12, 123, -81, 119, 82, 10, -82, 37, 38, -4,
	-81, 82, 121, 135, 122, 10, -85, -48, 123, -48,
	-25, -1, 79, 123, -48, 121, -14, 97, 98, 121,
	-14, 121, -15, -19, -14, 121, -86, -27, 12, 134,
	-87, -1, 12, -100, -14, 121, 149, 150, 87, 89,
	88, 151, 128, 152, 163, 130, 129, 164, 167, 165,
	166, 161, 162, 155, 156, 153, 154, 157, 158, 159,
	160, 90, 127, 123, 123, 123, 119, -14, 10, -144,
	128, 10, 10, -15, -19, -14, 52, 52, 136, 137,
	138, 139, 148, 140, 141, 142, 143, 144, 145, 146,
	147, 123, -14, 104, 105, -18, -19, -81, 79, 82,
	-11, -12, 98, -18, -14, -14, -14, -14, -42, -14,
	-50, -14, -14, -14, -14, -14, -14, -14, -49, 123,
	-48, -14, 125, 125, -121, 17, -88, -33, 12, 76,
	77, -14, 57, -43, -11, -41, -81, 79, 82, -21,
	-10, -136, -12, 123, 123, -14, -14, 123, -14, -14,
	125, -88, 17, 17, 75, -88, 125, 123, -91, -90,
	-14, 128, 125, 125, 82, -140, 123, -81, 78, 125,
	119, -10, 134, 78, -140, 119, 124, 121, 119, -80,
	-81, 121, 135, -83, -5, -81, 82, -84, -6, -81,
	82, 29, -81, 10, 136, -24, 120, -25, -51, -52,
	51, -25, 122, -146, -25, 122, 21, -144, -98, -97,
	-14, -141, 119, 122, 121, 121, 121, 121, 121, 135,
	-16, 119, -19, 121, 135, -144, 136, 121, 135, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -14, -14,
	-14, -14, -14, -14, -43, -14, 122, -101, -56, -19,
	-19, -15, -102, 10, -85, 121, 121, 10, 123, -65,
	55, -113, 55, 58, -14, 128, -14, -14, -14, -14,
	-14, -14, -14, -14, -14, -14, -14, -14, -92, -38,
	-19, 59, 82, -81, 78, 78, 124, 124, 124, 124,
	-13, -14, -13, 118, -33, -33, 17, 125, 57, -14,
	11, -19, -131, -132, -40, -39, -10, -136, 10, 119,
	-139, -140, 78, 82, -81, 57, -10, 78, -89, -36,
	-19, -15, -19, -15, -14, -13, 117, 75, 75, -13,
	-91, 126, -151, 135, 58, -17, -19, -13, -13, 10,
	124, -115, -50, -69, -15, -19, 128, 83, -140, -39,
	-40, 10, 52, -13, -14, -39, -40, 10, -14, 121,
	-80, 120, -140, -4, 121, 135, 29, -81, 121, 135,
	29, -81, 10, 29, 136, -28, -78, -7, -31, -81,
	79, 82, 60, 125, -8, 62, -79, 18, 74, -11,
	131, 132, 130, 129, 123, 123, -95, -85, -85, -48,
	121, 135, -99, 121, -99, 121, -27, -14, 12, 123,
	-28, -14, 122, -14, 124, 135, 29, 29, 124, 135,
	136, 120, 123, -106, -107, -63, -62, 60, 61, -45,
	-81, 79, 82, -109, 56, -45, 119, -114, -45, -15,
	-19, -19, 91, 124, 135, 123, -81, -127, -125, -124,
	-126, 125, -128, 57, 126, 126, -34, 10, 13, 12,
	10, 120, 125, 120, -129, -77, -130, -140, 125, 119,
	-10, -14, -40, -81, -131, -40, 124, 135, 124, 124,
	124, 126, 126, 124, -14, 128, -14, 128, 126, 126,
	124, 135, 124, -17, -14, -140, -140, 126, 120, -140,
	-140, 120, 120, -5, 10, 29, -6, 10, 29, 10,
	-28, 125, 130, 129, 164, 167, 165, 166, 151, 128,
	152, 161, 162, 163, 88, 89, 87, 150, 149, 155,
	156, 153, 154, 157, 159, 158, 160, 127, 82, -81,
	123, -122, -123, -78, 17, 78, -78, -78, -78, -78,
	-78, 124, -54, 93, 94, -96, 22, 121, -98, -14,
	120, 32, 33, -99, 31, -99, 120, 136, -106, -14,
	121, -56, -137, -19, 128, 59, -137, -57, -25, 122,
	10, -28, -103, 41, -106, 124, 135, -144, 82, -81,
	119, -114, -108, 135, -43, 136, -38, -92, 125, -126,
	-128, -13, -131, 126, -14, -135, 125, 125, -13, -14,
	120, -134, -36, 58, -17, -17, -69, 10, 10, -78,
	-78, -78, -78, -78, -78, -78, -78, -78, -78, -78,
	-78, -78, -78, -78, -78, -78, -78, -78, -78, -78,
	-78, -78, -78, -78, -78, 122, -78, -81, -122, 126,
	-151, 135, 58, 10, 52, 124, 121, -48, -25, -55,
	93, 94, 121, 121, -14, -150, 122, 121, 120, 121,
	31, -28, 124, -138, 58, -19, 123, -138, -85, 136,
	-58, 42, 123, 124, -94, 44, -63, -145, 83, -81,
	-108, 120, -66, -110, -67, -68, -111, -120, 47, 38,
	44, -76, 103, 102, 101, 98, 99, 100, -45, -139,
	-14, 124, -13, 126, -129, 126, -128, -13, -13, 126,
	120, -133, 57, -14, 128, 126, -78, 122, 124, -78,
	-78, -25, 95, -48, 122, -98, -150, -85, 121, -94,
	124, -137, -92, 124, 28, -28, 119, -45, 119, 119,
	123, 12, 120, -112, 12, 121, 135, -1, -76, 10,
	-116, -45, 126, 120, 126, 126, -131, -17, -78, 58,
	121, 122, -85, 124, -85, 119, -148, -25, 122, 124,
	-148, 121, -85, 12, -85, -85, -93, 12, 128, 136,
	121, 135, 136, 10, -144, 136, -143, 135, 121, 119,
	-78, -85, -147, -25, 122, -85, -85, 120, 124, 120,
	120, 124, 135, 12, -28, 12, -28, 136, 10, -28,
	-45, -117, -118, -70, -71, -72, -73, -74, -45, 10,
	-85, 120, 26, 119, 12, 128, 136, -28, 123, 120,
	-70, 121, 121, 45, 29, 78, 24, 121, -85, 12,
	-28, -106, -119, -45, -75, -76, 10, 121, 120, 124,
	135, 10, -104, -105, -59, 41, -142, 121, 119, -45,
	-59, 123, -85, -45, 120, 12, 124, 119, -85, 120,
}
var yyDef = [...]int{

	3, -2, 1, 2, 6, 7, 8, 0, 0, 0,
	0, 43, 4, 85, 86, 0, 38, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 63,
	0, 0, 0, 0, 69, 0, 0, 0, 87, 0,
	0, 301, 427, 428, 314, 94, 0, 96, 0, 100,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 282, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 296, 297, 298, 346, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 414,
	415, 0, 0, 418, 353, 0, 479, 452, 453, 454,
	408, -2, 0, 0, 351, 352, 354, 355, 356, 357,
	358, 359, 360, -2, 0, 457, 0, 0, 460, 472,
	461, 0, 0, 3, 0, 4, 0, 0, 0, 18,
	19, 0, 16, 0, 44, 0, 0, 0, 0, 0,
	0, 87, 0, 216, 0, 52, 0, 301, 329, 54,
	0, 56, 428, -2, 0, 59, 0, 159, 160, 0,
	0, 87, 165, 0, 215, 64, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 38, 0, 0, 0,
	88, 98, 101, -2, -2, 0, 95, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 478, 234, 247, 249, 248, 433, 330, 0, 0,
	0, 0, 329, 250, 268, 269, 270, 271, 282, 0,
	0, 287, 288, 289, 290, 291, 292, 293, 294, 0,
	345, 295, 463, 463, 0, 347, 348, 491, 493, 0,
	0, 300, 0, 349, 336, 337, 330, 0, 0, 339,
	-2, 0, 0, 0, 0, 505, 506, 0, 508, 509,
	463, 0, 0, 0, 362, 0, 463, 479, 0, 421,
	484, 0, 463, 463, 0, 321, 0, -2, 0, 463,
	0, -2, 473, 0, 328, 0, 0, 10, 3, 0,
	-2, 13, 0, 0, 24, 25, 0, 0, 30, 31,
	0, 0, 21, 0, 0, 37, 45, 39, 40, 41,
	0, 131, 38, 48, 129, 38, 0, 0, 0, 217,
	219, 51, 124, 124, 53, 55, 57, 58, 60, 0,
	161, 0, 431, 61, 0, 0, 0, 62, 0, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, -2, -2, -2, -2,
	-2, -2, -2, -2, 280, 0, 0, 0, 82, 84,
	-2, 428, 0, 0, 0, 71, 72, 0, -2, 103,
	0, 0, 0, 0, 231, 0, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 0, 475,
	476, 0, 0, 332, 0, 0, 227, 429, 430, 344,
	0, 464, 0, 299, 492, 489, 490, 0, 0, 0,
	412, 0, 444, 465, 466, 469, 445, 0, 470, 0,
	229, 350, 0, 0, 332, 0, 456, 0, 0, 510,
	-2, -2, -2, 428, 0, 0, 416, 361, 417, 0,
	0, 313, 480, 422, 0, 488, 432, 0, 0, 5,
	149, 0, 0, 152, -2, -2, 0, 0, 323, 0,
	447, -2, 517, 0, 0, 0, 448, -2, 0, 9,
	0, 12, 322, 17, 14, 0, 0, 27, 15, 0,
	0, 33, 20, 0, 0, 36, 364, 365, 366, -2,
	0, 0, 0, 419, 372, 373, 374, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 133, 0, 0,
	216, 0, 0, 124, 0, 124, 158, 0, 163, -2,
	166, 214, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 73, -2, 0, 139, 141, 87, 146, 147, 148,
	333, 0, 0, 0, 0, 99, 168, 102, 105, -2,
	-2, 232, 0, 0, 478, 478, 331, 283, 228, 225,
	226, 463, 221, 0, 309, 308, 0, 499, 500, 501,
	495, 496, 0, 498, 437, 442, 443, 441, 463, 0,
	446, 0, 447, 331, 341, 448, 502, 0, 503, 504,
	507, 311, 310, 312, 482, 0, 483, 0, 450, 451,
	150, 0, 151, 156, 157, 324, 325, 458, 459, 326,
	327, 462, 11, 23, 26, 0, 29, 32, 0, 22,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	419, 0, 421, 426, 0, 0, 382, 383, 405, 406,
	0, 0, 46, 0, 0, 137, 0, 49, 0, 218,
	120, 0, 0, 0, 0, 0, 162, 0, 0, 284,
	65, 83, 107, 109, 0, 0, 107, 68, 116, 38,
	0, 118, 75, 0, 0, 315, 145, 89, 0, 335,
	168, 104, 198, 0, 349, 0, 474, 0, 463, 224,
	220, 0, 444, 494, 0, 434, 463, 463, 0, 0,
	471, 338, 511, 0, 486, 487, 153, 28, 34, 0,
	376, 377, 378, 379, 380, 381, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 394, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 0, -2, 0, 371,
	420, 422, 0, 363, 516, 407, 42, 0, 136, 0,
	0, 0, 130, 216, 0, 38, 127, 128, 121, 122,
	0, 164, 315, 0, 0, 110, 478, 0, 0, 0,
	70, 0, 0, 0, 0, 0, 142, 0, 90, 334,
	198, 93, 167, 0, 0, 171, 0, -2, 197, 0,
	0, 200, 202, 203, 204, 205, 206, 207, 106, 233,
	230, 477, 0, 223, 438, 0, 436, 0, 0, 467,
	468, 340, 0, 481, 0, 375, 403, 0, 370, 424,
	425, 132, 0, 0, 38, 0, 38, 126, 123, 0,
	0, 108, 0, 0, 0, 119, 38, 0, 38, 38,
	0, 143, 92, 0, 210, 170, 0, 87, 201, 0,
	0, 174, 222, 497, 440, 439, 342, 485, 404, 0,
	47, 38, 138, 0, 125, 38, 66, 114, 38, 111,
	67, 117, 0, 0, 0, 0, 0, 319, 0, 0,
	169, 0, 0, 0, 0, 0, 173, 0, 176, 178,
	423, 134, 50, 112, 38, 0, 0, 76, 0, 91,
	302, 316, 0, 320, 144, 208, 211, 0, 0, 213,
	175, 0, 179, 180, 0, 0, 188, 0, 0, -2,
	0, 303, 0, 38, 317, 0, 0, 212, -2, 177,
	181, 182, 183, 0, 192, 0, 0, 115, 0, 318,
	209, 0, 184, 185, 0, -2, 189, 113, 78, 0,
	0, 190, 74, 77, 79, 0, 172, 194, 38, 186,
	80, 0, 0, 0, 195, 0, 0, 38, 0, 81,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 117, 3, 134, 166, 128, 3,
	123, 124, 164, 130, 135, 129, 163, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 122, 121,
	157, 136, 159, 127, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 125, 3, 126, 152, 3, 118, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 119, 151, 120, 132,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 153,
	154, 155, 156, 158, 160, 161, 162, 167,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:236
		{
			rootnode = stmt.NewStmtList(yyDollar[1].list)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:242
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:243
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:248
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{namePart}
			comments.AddComments(namePart, yyDollar[1].token.Comments())
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:255
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			positions.AddPosition(namePart, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.list = append(yyDollar[1].list, namePart)
			comments.AddComments(namePart, yyDollar[3].token.Comments())
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:265
		{
			yyVAL.node = yyDollar[1].node
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:267
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:269
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:271
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 10:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:277
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 11:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:287
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 12:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:297
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 13:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:303
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 14:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:309
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:319
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 16:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:329
		{
			yyVAL.node = yyDollar[1].node
		}
	case 17:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:334
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:336
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:341
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 20:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:351
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:364
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 22:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:374
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:390
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:392
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:397
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:407
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:420
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:430
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 29:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:446
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:448
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:453
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:463
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))
			comments.AddComments(alias, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:476
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yyVAL.node = stmt.NewUse(nil, name, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[2].list))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:486
		{
			name := name.NewName(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[2].list))
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewUse(nil, name, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[2].list))
			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[2].list))
		}
	case 35:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:502
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)

			yyVAL.node = yyDollar[1].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))
		}
	case 36:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:518
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(constant, yyDollar[2].token.Comments())

			constList := []node.Node{constant}

			yyVAL.node = stmt.NewConstList(constList)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:537
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:539
		{
			yyVAL.list = []node.Node{}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:545
		{
			yyVAL.node = yyDollar[1].node
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:547
		{
			yyVAL.node = yyDollar[1].node
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:549
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:551
		{
			yyVAL.node = stmt.NewHaltCompiler()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:561
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:563
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = stmt.NewLabel(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			comments.AddComments(label, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:576
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:582
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			if yyDollar[5].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:596
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[4].list))

			yyVAL.node = stmt.NewAltIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:605
		{
			if yyDollar[3].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltWhile(yyDollar[2].node, yyDollar[3].altSyntaxNode.node)
			} else {
				yyVAL.node = stmt.NewWhile(yyDollar[2].node, yyDollar[3].altSyntaxNode.node)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:615
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 50:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:621
		{
			if yyDollar[9].altSyntaxNode.isAlt {
				yyVAL.node = stmt.NewAltFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].altSyntaxNode.node)
			} else {
				yyVAL.node = stmt.NewFor(yyDollar[3].list, yyDollar[5].list, yyDollar[7].list, yyDollar[9].altSyntaxNode.node)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:631
		{
			if yyDollar[3].nodesWithEndToken.endToken.Value == ";" {
				yyVAL.node = stmt.NewAltSwitch(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			} else {
				yyVAL.node = stmt.NewSwitch(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:641
		{
			yyVAL.node = stmt.NewBreak(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:647
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:653
		{
			yyVAL.node = stmt.NewContinue(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:659
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:665
		{
			yyVAL.node = stmt.NewReturn(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:671
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:677
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:683
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:689
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:695
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:701
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:707
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:713
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:719
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:725
		{
			if yyDollar[6].foreachVariable.node == nil {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				}
			} else {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				}
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:743
		{
			if yyDollar[6].foreachVariable.node == nil {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, nil, yyDollar[5].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[5].foreachVariable.byRef)
				}
			} else {
				if yyDollar[8].altSyntaxNode.isAlt {
					yyVAL.node = stmt.NewAltForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				} else {
					yyVAL.node = stmt.NewForeach(yyDollar[3].node, yyDollar[5].foreachVariable.node, yyDollar[6].foreachVariable.node, yyDollar[8].altSyntaxNode.node, yyDollar[6].foreachVariable.byRef)
				}
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].altSyntaxNode.node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 68:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:761
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:767
		{
			yyVAL.node = stmt.NewNop()
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:773
		{
			yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)

			if yyDollar[6].node == nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:785
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:791
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(label, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = stmt.NewGoto(label)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(label, yyDollar[2].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:804
		{
			yyVAL.list = []node.Node{}
		}
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:806
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(catch, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(catch, yyDollar[1].token.Comments())

			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:824
		{
			yyVAL.node = nil
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:826
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:835
		{
			yyVAL.list = yyDollar[1].list
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:837
		{
			yyVAL.list = []node.Node{}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:842
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:844
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:849
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:866
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:868
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:873
		{
			yyVAL.node = yyDollar[1].node
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:878
		{
			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:883
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:888
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:890
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:895
		{
			yyVAL.boolWithToken = boolWithToken{false, nil}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:897
		{
			yyVAL.boolWithToken = boolWithToken{true, &yyDollar[1].token}
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:902
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewFunction(name, yyDollar[2].boolWithToken.value, yyDollar[5].list, nil, yyDollar[8].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:915
		{
			switch n := yyDollar[1].node.(type) {
			case *stmt.Class:
				name := node.NewIdentifier(yyDollar[2].token.Value)
				positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.ClassName = name
				n.Stmts = yyDollar[6].list
				n.Extends = yyDollar[3].node
				n.Implements = yyDollar[4].list

			case *stmt.Trait:
				// TODO: is it possible that trait extend or implement
				name := node.NewIdentifier(yyDollar[2].token.Value)
				positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
				n.TraitName = name
				n.Stmts = yyDollar[6].list
			}

			yyVAL.node = yyDollar[1].node
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:936
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewInterface(name, yyDollar[3].list, yyDollar[5].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:950
		{
			yyVAL.node = stmt.NewClass(nil, nil, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:956
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(classModifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:966
		{
			yyVAL.node = stmt.NewTrait(nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:972
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(classModifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(classModifier, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:985
		{
			yyVAL.node = nil
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:987
		{
			yyVAL.node = yyDollar[2].node
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:992
		{
			yyVAL.token = yyDollar[1].token
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:997
		{
			yyVAL.list = nil
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:999
		{
			yyVAL.list = yyDollar[2].list
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1004
		{
			yyVAL.list = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1006
		{
			yyVAL.list = yyDollar[2].list
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1011
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1013
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1018
		{
			yyVAL.foreachVariable = foreachVariable{nil, false}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1020
		{
			yyVAL.foreachVariable = yyDollar[2].foreachVariable
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1025
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[1].node, false}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1027
		{
			yyVAL.foreachVariable = foreachVariable{yyDollar[2].node, true}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1029
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.foreachVariable = foreachVariable{list, false}
			comments.AddComments(list, yyDollar[1].token.Comments())
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1039
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1041
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			positions.AddPosition(yyVAL.altSyntaxNode.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1050
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1052
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			positions.AddPosition(yyVAL.altSyntaxNode.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1061
		{
			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1063
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1073
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(name, yyDollar[1].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(constant, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{constant}
		}
	case 119:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1085
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, constant)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1101
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1103
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[4].token}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1105
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[4].token}
		}
	case 123:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1107
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[3].list, yyDollar[5].token}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1113
		{
			yyVAL.list = []node.Node{}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1115
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			positions.AddPosition(_case, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			yyVAL.list = append(yyDollar[1].list, _case)
			comments.AddComments(_case, yyDollar[2].token.Comments())
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1122
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			positions.AddPosition(_default, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))
			yyVAL.list = append(yyDollar[1].list, _default)
			comments.AddComments(_default, yyDollar[2].token.Comments())
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1139
		{
			yyVAL.altSyntaxNode = altSyntaxNode{yyDollar[1].node, false}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1141
		{
			yyVAL.altSyntaxNode = altSyntaxNode{stmt.NewStmtList(yyDollar[2].list), true}
			positions.AddPosition(yyVAL.altSyntaxNode.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1151
		{
			yyVAL.list = nil
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1153
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1165
		{
			yyVAL.list = nil
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1167
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[5].list))

			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			positions.AddPosition(_elseIf, positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))
			comments.AddComments(_elseIf, yyDollar[2].token.Comments())

			yyVAL.list = append(yyDollar[1].list, _elseIf)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1182
		{
			yyVAL.node = nil
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1184
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1194
		{
			yyVAL.node = nil
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1196
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			positions.AddPosition(stmts, positionBuilder.NewNodeListPosition(yyDollar[3].list))

			yyVAL.node = stmt.NewAltElse(stmts)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1209
		{
			yyVAL.list = yyDollar[1].list
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1211
		{
			yyVAL.list = nil
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1216
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1218
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1223
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[2].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(*yyDollar[3].boolWithToken.token, yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[4].token))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 144:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1249
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[4].token.Comments())

			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].boolWithToken.value, yyDollar[3].boolWithToken.value)

			if yyDollar[1].node != nil {
				positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
				comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
			} else if yyDollar[2].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[2].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[2].boolWithToken.token.Comments())
			} else if yyDollar[3].boolWithToken.value == true {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(*yyDollar[3].boolWithToken.token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[3].boolWithToken.token.Comments())
			} else {
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
				comments.AddComments(yyVAL.node, yyDollar[4].token.Comments())
			}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1279
		{
			yyVAL.node = nil
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1281
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1287
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1293
		{
			yyVAL.node = yyDollar[1].node
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1299
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{}, yyDollar[2].token}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1301
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1303
		{
			arg := node.NewArgument(yyDollar[2].node, false, false)
			positions.AddPosition(arg, positionBuilder.NewNodePosition(yyDollar[2].node))
			comments.AddComments(arg, comments[yyDollar[2].node])

			yyVAL.nodesWithEndToken = &nodesWithEndToken{[]node.Node{arg}, yyDollar[3].token}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1315
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1317
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1322
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1328
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1334
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, false, true)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1340
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1349
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1351
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1357
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1367
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1373
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1383
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[3].token))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 164:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1400
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			yyVAL.list = append(yyDollar[1].list, staticVar)

			comments.AddComments(identifier, yyDollar[3].token.Comments())
			comments.AddComments(variable, yyDollar[3].token.Comments())
			comments.AddComments(staticVar, yyDollar[3].token.Comments())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1417
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, nil)
			positions.AddPosition(staticVar, positionBuilder.NewTokenPosition(yyDollar[1].token))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1434
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))

			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			positions.AddPosition(staticVar, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			yyVAL.list = []node.Node{staticVar}

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(staticVar, yyDollar[1].token.Comments())
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1456
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1458
		{
			yyVAL.list = []node.Node{}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1464
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1470
		{
			yyVAL.node = yyDollar[1].node
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1472
		{
			yyVAL.node = yyDollar[1].node
		}
	case 172:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1474
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(name, yyDollar[4].token.Comments())

			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].boolWithToken.value, yyDollar[6].list, nil, yyDollar[8].nodesWithEndToken.nodes, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[8].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1487
		{
			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1496
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1498
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1503
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1505
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1510
		{
			yyVAL.list = nil
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1512
		{
			yyVAL.list = yyDollar[1].list
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1517
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1519
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1524
		{
			yyVAL.node = yyDollar[1].node
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1526
		{
			yyVAL.node = yyDollar[1].node
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1531
		{
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1540
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1542
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1547
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(nil, name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1557
		{
			yyVAL.node = yyDollar[1].node
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1562
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(target, yyDollar[3].token.Comments())

			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 190:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1575
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(alias, positionBuilder.NewTokenPosition(yyDollar[4].token))
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			comments.AddComments(alias, yyDollar[4].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1585
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1594
		{
			yyVAL.node = nil
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1596
		{
			yyVAL.node = yyDollar[1].node
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1601
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{nil, yyDollar[1].token}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1603
		{
			yyVAL.nodesWithEndToken = &nodesWithEndToken{yyDollar[2].list, yyDollar[3].token}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1608
		{
			yyVAL.list = yyDollar[1].list
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1610
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(modifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(modifier, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{modifier}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1621
		{
			yyVAL.list = nil
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1623
		{
			yyVAL.list = yyDollar[1].list
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1628
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1630
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1635
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1641
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1647
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1653
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1659
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1665
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1674
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			positions.AddPosition(property, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1690
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[5].node, "")
			positions.AddPosition(property, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(property, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, property)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1706
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, nil, "")
			positions.AddPosition(property, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1722
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			property := stmt.NewProperty(variable, yyDollar[3].node, "")
			positions.AddPosition(property, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			comments.AddComments(property, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{property}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1741
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(name, yyDollar[3].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			comments.AddComments(constant, yyDollar[3].token.Comments())

			yyDollar[1].node.(*stmt.ClassConstList).Consts = append(yyDollar[1].node.(*stmt.ClassConstList).Consts, constant)
			positions.AddPosition(yyDollar[1].node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			yyVAL.node = yyDollar[1].node
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1756
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(name, yyDollar[2].token.Comments())

			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			positions.AddPosition(constant, positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			comments.AddComments(constant, yyDollar[2].token.Comments())

			yyVAL.node = stmt.NewClassConstList(nil, []node.Node{constant})
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1773
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1775
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1781
		{
			yyVAL.list = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1783
		{
			yyVAL.list = yyDollar[1].list
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1788
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1790
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1795
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1797
		{
			yyVAL.list = yyDollar[1].list
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1802
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1809
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[2].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[2].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1819
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1821
		{
			yyVAL.list = yyDollar[1].list
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1823
		{
			yyVAL.list = yyDollar[1].list
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1828
		{
			yyVAL.list = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1830
		{
			yyVAL.list = yyDollar[1].list
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1835
		{
			if yyDollar[3].nodesWithEndToken != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].nodesWithEndToken.nodes)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].nodesWithEndToken.endToken))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1850
		{
			list := expr.NewList(yyDollar[3].list)
			positions.AddPosition(list, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yyVAL.node = assign.NewAssign(list, yyDollar[6].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			comments.AddComments(list, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1860
		{
			yyVAL.node = assign.NewAssign(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1866
		{
			yyVAL.node = assign.NewAssignRef(yyDollar[1].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1872
		{
			_new := expr.NewNew(yyDollar[5].node, nil)
			positions.AddPosition(_new, positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[5].node))

			if yyDollar[6].nodesWithEndToken != nil {
				_new = expr.NewNew(yyDollar[5].node, yyDollar[6].nodesWithEndToken.nodes)
				positions.AddPosition(_new, positionBuilder.NewTokensPosition(yyDollar[4].token, yyDollar[6].nodesWithEndToken.endToken))
			}
			comments.AddComments(_new, comments[yyDollar[1].node])

			yyVAL.node = assign.NewAssignRef(yyDollar[1].node, _new)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, _new))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1887
		{
			yyVAL.node = expr.NewClone(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1893
		{
			yyVAL.node = assign.NewPlus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1899
		{
			yyVAL.node = assign.NewMinus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1905
		{
			yyVAL.node = assign.NewMul(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1911
		{
			yyVAL.node = assign.NewPow(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1917
		{
			yyVAL.node = assign.NewDiv(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1923
		{
			yyVAL.node = assign.NewConcat(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1929
		{
			yyVAL.node = assign.NewMod(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1935
		{
			yyVAL.node = assign.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1941
		{
			yyVAL.node = assign.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1947
		{
			yyVAL.node = assign.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1953
		{
			yyVAL.node = assign.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1959
		{
			yyVAL.node = assign.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1965
		{
			yyVAL.node = expr.NewPostInc(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1971
		{
			yyVAL.node = expr.NewPreInc(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1977
		{
			yyVAL.node = expr.NewPostDec(yyDollar[1].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1983
		{
			yyVAL.node = expr.NewPreDec(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1989
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1995
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2001
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2007
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2013
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2019
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2025
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2031
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2037
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2043
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2049
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2055
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2061
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2067
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2073
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2079
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2085
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2091
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2097
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2103
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2109
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2115
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2121
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2127
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2133
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2139
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2145
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2151
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2157
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2163
		{
			yyVAL.node = expr.NewInstanceOf(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2169
		{
			yyVAL.node = yyDollar[1].node
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2171
		{
			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2173
		{
			yyVAL.node = yyDollar[2].node

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, yyDollar[1].token.Comments())
					yyVAL.node = nn
				}
			}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2199
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2205
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2211
		{
			yyVAL.node = yyDollar[1].node
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2213
		{
			yyVAL.node = cast.NewCastInt(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2219
		{
			yyVAL.node = cast.NewCastDouble(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2225
		{
			yyVAL.node = cast.NewCastString(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2231
		{
			yyVAL.node = cast.NewCastArray(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2237
		{
			yyVAL.node = cast.NewCastObject(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2243
		{
			yyVAL.node = cast.NewCastBool(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2249
		{
			yyVAL.node = cast.NewCastUnset(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2255
		{
			if strings.EqualFold(yyDollar[1].token.Value, "die") {
				yyVAL.node = expr.NewDie(yyDollar[2].node)
			} else {
				yyVAL.node = expr.NewExit(yyDollar[2].node)
			}
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2265
		{
			yyVAL.node = expr.NewErrorSuppress(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2271
		{
			yyVAL.node = yyDollar[1].node
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2273
		{
			yyVAL.node = yyDollar[1].node
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2275
		{
			yyVAL.node = yyDollar[1].node
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2277
		{
			yyVAL.node = expr.NewShellExec(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2283
		{
			yyVAL.node = expr.NewPrint(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2289
		{
			yyVAL.node = expr.NewYield(nil, nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 302:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:2295
		{
			yyVAL.node = expr.NewClosure(yyDollar[4].list, yyDollar[6].list, nil, yyDollar[8].list, false, yyDollar[2].boolWithToken.value, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:2302
		{
			yyVAL.node = expr.NewClosure(yyDollar[5].list, yyDollar[7].list, nil, yyDollar[9].list, true, yyDollar[3].boolWithToken.value, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[10].token))

			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2312
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2318
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2324
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2330
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2339
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2345
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2351
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(str, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(str, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[str])
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2361
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2370
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2376
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2385
		{
			yyVAL.token = yyDollar[1].token
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2390
		{
			yyVAL.list = []node.Node{}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2392
		{
			yyVAL.list = yyDollar[3].list
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2397
		{
			identifier := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(identifier, yyDollar[3].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClosureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[3].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2413
		{
			identifier := node.NewIdentifier(yyDollar[4].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(identifier, yyDollar[4].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[4].token))
			comments.AddComments(variable, yyDollar[3].token.Comments())

			use := expr.NewClosureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			comments.AddComments(use, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, use)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2429
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(identifier, yyDollar[1].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClosureUse(variable, false)
			positions.AddPosition(use, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2445
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(identifier, yyDollar[2].token.Comments())

			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(variable, yyDollar[1].token.Comments())

			use := expr.NewClosureUse(variable, true)
			positions.AddPosition(use, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(use, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{use}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2464
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewFunctionCall(name, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(name, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2474
		{
			funcName := name.NewRelative(yyDollar[3].list, "")
			positions.AddPosition(funcName, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(funcName, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[funcName])
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2484
		{
			funcName := name.NewFullyQualified(yyDollar[2].list, "")
			positions.AddPosition(funcName, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(funcName, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[3].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(funcName, yyDollar[3].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[funcName])
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2494
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2500
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2506
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2512
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2518
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].nodesWithEndToken.endToken))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2527
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2533
		{
			yyVAL.node = name.NewName(yyDollar[1].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2539
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2545
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2554
		{
			yyVAL.node = name.NewName(yyDollar[1].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(yyVAL.node, ListGetFirstNodeComments(yyDollar[1].list))
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2560
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2566
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list, "")
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2575
		{
			yyVAL.node = yyDollar[1].node
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2577
		{
			yyVAL.node = yyDollar[1].node
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2582
		{
			yyVAL.node = yyDollar[1].node

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2618
		{
			yyVAL.node = yyDollar[1].node
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2624
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2626
		{
			yyVAL.list = []node.Node{}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2632
		{
			yyVAL.list = yyDollar[2].list
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2637
		{
			yyVAL.node = nil
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2639
		{
			yyVAL.node = nil
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2641
		{
			yyVAL.node = yyDollar[1].node
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2646
		{
			yyVAL.list = []node.Node{}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2648
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token.Value)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2650
		{
			yyVAL.list = yyDollar[1].list
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2655
		{
			yyVAL.nodesWithEndToken = nil
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2657
		{
			yyVAL.nodesWithEndToken = yyDollar[1].nodesWithEndToken
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2662
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2668
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2674
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2680
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2686
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2692
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2698
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2704
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2710
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2716
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2722
		{
			yyVAL.node = scalar.NewString(yyDollar[2].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)) /* TODO: mark as Heredoc*/
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2727
		{
			yyVAL.node = scalar.NewEncapsed(nil)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2736
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2749
		{
			yyVAL.node = yyDollar[1].node
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2754
		{
			yyVAL.node = yyDollar[1].node
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2756
		{
			yyVAL.node = yyDollar[1].node
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2758
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewConstFetch(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(name))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2768
		{
			name := name.NewRelative(yyDollar[3].list, "")
			positions.AddPosition(name, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2778
		{
			name := name.NewFullyQualified(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2788
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2794
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2800
		{
			yyVAL.node = yyDollar[1].node
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2802
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2808
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2813
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2819
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2825
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2831
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2837
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2843
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2849
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2855
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2861
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2867
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2873
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2879
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2885
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2891
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2897
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2903
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2909
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2915
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2921
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2927
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2933
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2939
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2945
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2951
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2957
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2963
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2969
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2975
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2981
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2987
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2993
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2999
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3005
		{
			yyVAL.node = yyDollar[2].node
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3010
		{
			yyVAL.node = yyDollar[1].node
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3012
		{
			name := name.NewName(yyDollar[1].list, "")
			positions.AddPosition(name, positionBuilder.NewNodeListPosition(yyDollar[1].list))
			comments.AddComments(name, ListGetFirstNodeComments(yyDollar[1].list))

			yyVAL.node = expr.NewConstFetch(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(name))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3022
		{
			name := name.NewRelative(yyDollar[3].list, "")
			positions.AddPosition(name, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(name))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3032
		{
			name := name.NewFullyQualified(yyDollar[2].list, "")
			positions.AddPosition(name, positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			comments.AddComments(name, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewConstFetch(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(name))
			comments.AddComments(yyVAL.node, comments[name])
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3045
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3055
		{
			yyVAL.node = yyDollar[1].node
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3057
		{
			yyVAL.node = yyDollar[1].node
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3059
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3061
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3067
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3073
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3082
		{
			yyVAL.list = nil
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3084
		{
			yyVAL.list = yyDollar[1].list
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3094
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3102
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3110
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3118
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3129
		{
			yyVAL.node = yyDollar[1].node
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3131
		{
			yyVAL.node = yyDollar[1].node
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3136
		{
			yyVAL.node = yyDollar[2].node
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3138
		{
			yyVAL.node = yyDollar[2].node
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3144
		{
			yyVAL.node = yyDollar[1].node
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3150
		{
			yyVAL.node = yyDollar[1].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3155
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3160
		{
			yyVAL.node = yyDollar[1].node

			if yyDollar[4].list != nil {
				yyDollar[4].list[0].(*expr.MethodCall).Method = yyDollar[3].list[len(yyDollar[3].list)-1].(*expr.PropertyFetch).Property
				yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
			}

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyVAL.node, nn))
					comments.AddComments(nn, comments[yyDollar[1].node])
					yyVAL.node = nn
				}
			}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3213
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3218
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3220
		{
			yyVAL.list = []node.Node{}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3226
		{
			if yyDollar[3].list != nil {
				yyDollar[3].list[0].(*expr.MethodCall).Method = yyDollar[2].list[len(yyDollar[2].list)-1].(*expr.PropertyFetch).Property
				yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
			}

			yyVAL.list = yyDollar[2].list
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3238
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3245
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = []node.Node{yyDollar[1].node, fetch}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3255
		{
			yyVAL.node = expr.NewMethodCall(nil, nil, yyDollar[1].nodesWithEndToken.nodes)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeListTokenPosition(yyDollar[1].nodesWithEndToken.nodes, yyDollar[1].nodesWithEndToken.endToken))
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3263
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3265
		{
			yyVAL.list = yyDollar[1].list
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3267
		{
			yyVAL.list = nil
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3272
		{
			yyVAL.node = yyDollar[1].node
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3274
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3287
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3293
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3303
		{
			yyVAL.node = yyDollar[1].node
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3308
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3314
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3322
		{
			yyVAL.node = yyDollar[1].node
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3323
		{
			yyVAL.node = yyDollar[1].node
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3324
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3330
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3332
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				positions[n] = positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3342
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3347
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3353
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3359
		{
			yyVAL.node = yyDollar[1].node
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3365
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3375
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3384
		{
			yyVAL.node = nil
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3386
		{
			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3392
		{
			yyVAL.list = yyDollar[1].list
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3394
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3404
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3411
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[3].node))

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3418
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			positions.AddPosition(fetch, positionBuilder.NewNodePosition(yyDollar[1].node))

			yyVAL.list = []node.Node{fetch}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3428
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3434
		{
			yyVAL.node = yyDollar[2].node
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3439
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(n, yyDollar[1].token.Comments())

			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3447
		{
			n := expr.NewVariable(nil)
			positions.AddPosition(n, positionBuilder.NewTokenPosition(yyDollar[2].token))
			comments.AddComments(n, yyDollar[2].token.Comments())

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)

			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3462
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3464
		{
			if yyDollar[1].node == nil {
				yyVAL.list = []node.Node{}
			} else {
				yyVAL.list = []node.Node{yyDollar[1].node}
			}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3476
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3482
		{
			item := expr.NewList(yyDollar[3].list)
			positions.AddPosition(item, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(item, yyDollar[1].token.Comments())

			yyVAL.node = expr.NewArrayItem(nil, item, false)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodePosition(item))
			comments.AddComments(yyVAL.node, comments[item])
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3492
		{
			yyVAL.node = nil
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3498
		{
			yyVAL.list = []node.Node{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3500
		{
			yyVAL.list = yyDollar[1].list
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3505
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3513
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3521
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3529
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node, false)
			positions.AddPosition(arrayItem, positionBuilder.NewNodePosition(yyDollar[1].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3537
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[6].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))
			comments.AddComments(arrayItem, comments[yyDollar[3].node])

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3545
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			comments.AddComments(arrayItem, yyDollar[3].token.Comments())

			yyVAL.list = append(yyDollar[1].list, arrayItem)
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3553
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[4].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))
			comments.AddComments(arrayItem, comments[yyDollar[1].node])

			yyVAL.list = []node.Node{arrayItem}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3561
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[2].node, true)
			positions.AddPosition(arrayItem, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(arrayItem, yyDollar[1].token.Comments())

			yyVAL.list = []node.Node{arrayItem}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3572
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3574
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.list = append(yyDollar[1].list, encapsed)
			comments.AddComments(encapsed, yyDollar[2].token.Comments())
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3581
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3583
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			positions.AddPosition(encapsed, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}
			comments.AddComments(encapsed, yyDollar[1].token.Comments())
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3593
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(name, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(name)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(name, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3603
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3616
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[1].token))
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(fetch, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(fetch, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3632
		{
			yyVAL.node = yyDollar[2].node
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:3638
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[2].token))
			variable := expr.NewVariable(identifier)
			positions.AddPosition(variable, positionBuilder.NewTokenPosition(yyDollar[2].token))
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			comments.AddComments(identifier, yyDollar[2].token.Comments())
			comments.AddComments(variable, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3652
		{
			yyVAL.node = yyDollar[2].node
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3657
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3663
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
				positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))
			}
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3675
		{
			identifier := node.NewIdentifier(yyDollar[1].token.Value)
			positions.AddPosition(identifier, positionBuilder.NewTokenPosition(yyDollar[1].token))
			yyVAL.node = expr.NewVariable(identifier)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenPosition(yyDollar[1].token))

			comments.AddComments(identifier, yyDollar[1].token.Comments())
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3688
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3694
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3700
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3706
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3712
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3718
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3724
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3730
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)
			positions.AddPosition(yyVAL.node, positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			comments.AddComments(yyVAL.node, yyDollar[1].token.Comments())
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3739
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3741
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3746
		{
			yyVAL.node = yyDollar[1].node
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3748
		{
			yyVAL.node = yyDollar[1].node
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3753
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3763
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3776
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3789
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			positions.AddPosition(target, positionBuilder.NewTokenPosition(yyDollar[3].token))
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)
			positions.AddPosition(yyVAL.node, positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			comments.AddComments(target, yyDollar[3].token.Comments())
			comments.AddComments(yyVAL.node, comments[yyDollar[1].node])
		}
	}
	goto yystack /* stack new state and value */
}
